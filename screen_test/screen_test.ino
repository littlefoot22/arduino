/*********
  Rui Santos
  Complete project details at https://randomnerdtutorials.com  
  https://javl.github.io/image2cpp/ -> white background
  GMP -> greyscale -> flatten image -> export to bitmap
*********/

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_NeoPixel.h>
#define NUMPIXELS        25
Adafruit_NeoPixel pixels(NUMPIXELS, 6, NEO_GRB + NEO_KHZ800);

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

unsigned long startTime; 
unsigned long buttonStartTime; 
unsigned long frame_1_startTime; 

unsigned long bossHexStartTime; 
unsigned long shiftLeftStartTime; 
unsigned long poryStartTime; 

uint8_t frame_number_drag = 0; 
uint8_t drag_loops = 0; 

uint8_t frame_number = 0; 
uint8_t frame_number_sword = 0;
uint8_t frame_number_pory = 0;
uint8_t frame_sword_mov = 0;
uint8_t num_stack_len = 0;

uint8_t brightness = 120; 

uint8_t operation = 0; 
uint16_t j = 0;
int index = 0;

uint8_t frame_id = 0;
uint8_t meter = 0;

uint8_t signed_bits = 10;
uint8_t shift_bits = 10;

//unsigned int fadeDirection = 1; 

bool rotate = true; 

byte randomByte = 0xff;

byte boss_byte_0 = 0xff;
byte boss_byte_1 = 0xff;
byte boss_byte_2 = 0xff;
byte boss_byte_3 = 0xff;

byte playerMode = 0;

int screenWidth;
int screenHeight;

byte playerByte1 = 0xff;
byte playerByte2 = 0xff;
byte playerByte3 = 0xff;
byte playerByte4 = 0xff;
byte new_value = 0xff;

uint8_t operator_id = 0;
uint8_t operator_pos = 0;

int BUTTON_DELAY = 100;

char mode = 's';

// 'cat1', 36x37px
const unsigned char epd_bitmap_cat1 [] PROGMEM = {
  0xff, 0xff, 0xf1, 0xff, 0x10, 0xff, 0xff, 0xe6, 0x7e, 0xc0, 0xff, 0xff, 0xe3, 0x0c, 0xc0, 0xff, 
  0xff, 0xe0, 0x90, 0x00, 0xff, 0xff, 0xc0, 0x00, 0x10, 0xff, 0xff, 0x98, 0x00, 0x30, 0xff, 0xff, 
  0x7e, 0x00, 0x70, 0xff, 0xfe, 0x43, 0x80, 0xb0, 0xff, 0xfe, 0x3d, 0xf0, 0xb0, 0xff, 0xfc, 0x66, 
  0xf9, 0xd0, 0xff, 0xfc, 0x42, 0xff, 0x90, 0xff, 0xfc, 0x42, 0xf0, 0x10, 0xff, 0xfc, 0x42, 0xe7, 
  0xb0, 0xff, 0xfe, 0x3d, 0xdf, 0xd0, 0xff, 0xfe, 0x00, 0x88, 0x50, 0xff, 0xfc, 0x00, 0x03, 0x10, 
  0xfc, 0xfc, 0x00, 0x07, 0xb0, 0xfb, 0x7b, 0x00, 0x00, 0x70, 0xfb, 0xbb, 0x80, 0x01, 0xf0, 0xfb, 
  0xbb, 0xc3, 0xfc, 0xf0, 0xfb, 0xbb, 0xc3, 0xfb, 0x70, 0xfd, 0xbd, 0x80, 0xfb, 0x70, 0xfd, 0xbc, 
  0x03, 0x7b, 0x70, 0xfe, 0xbe, 0x03, 0xb0, 0xf0, 0xff, 0x3f, 0x03, 0x8d, 0xf0, 0xff, 0x5f, 0x44, 
  0x7b, 0xf0, 0xff, 0x0f, 0xa7, 0xf5, 0xf0, 0xff, 0x40, 0x41, 0xf5, 0xf0, 0xff, 0xa4, 0x0e, 0xed, 
  0xf0, 0xff, 0x8a, 0x4e, 0x03, 0xf0, 0xff, 0xc4, 0x01, 0xef, 0xf0, 0xff, 0xe8, 0x07, 0xdf, 0xf0, 
  0xff, 0xf6, 0x1b, 0x3f, 0xf0, 0xff, 0xf9, 0x7c, 0xff, 0xf0, 0xff, 0xfe, 0x03, 0xff, 0xf0, 0xff, 
  0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0
};
// 'cat2', 36x37px
const unsigned char epd_bitmap_cat2 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xfc, 0x70, 0xff, 0xff, 0xff, 0xff, 0x30, 0xff, 0xff, 0xc5, 0xfb, 0x30, 0xff, 
  0xff, 0x99, 0x30, 0x30, 0xff, 0xff, 0x8c, 0x40, 0x70, 0xff, 0xff, 0x82, 0x00, 0x70, 0xff, 0xff, 
  0xc0, 0x00, 0xf0, 0xff, 0xff, 0x30, 0x01, 0x70, 0xff, 0xff, 0x3d, 0x01, 0x70, 0xff, 0xfe, 0xe7, 
  0xe1, 0xb0, 0xff, 0xfc, 0x9b, 0xf3, 0x30, 0xff, 0xfc, 0x6d, 0xfc, 0x30, 0xff, 0xfc, 0xc5, 0xf3, 
  0xb0, 0xff, 0xf8, 0x42, 0xe7, 0xd0, 0xff, 0xfc, 0x42, 0xdc, 0x50, 0xff, 0xfc, 0x4d, 0x8b, 0x10, 
  0xff, 0xfc, 0x30, 0x83, 0xb0, 0xf3, 0xfe, 0x00, 0x00, 0x30, 0xfd, 0xfe, 0x00, 0x00, 0xf0, 0xee, 
  0xfe, 0xc0, 0x00, 0x70, 0xee, 0xfe, 0xe0, 0x7f, 0x70, 0xee, 0xfe, 0xf0, 0xff, 0x70, 0xe6, 0xff, 
  0x70, 0xff, 0x70, 0xfb, 0x7f, 0x20, 0x7e, 0xb0, 0xfd, 0x3f, 0x80, 0xbe, 0xd0, 0xfe, 0x7f, 0x81, 
  0xde, 0xd0, 0xff, 0x1f, 0x81, 0xd8, 0x30, 0xfe, 0xcf, 0xa2, 0x46, 0xf0, 0xff, 0x00, 0x53, 0xbd, 
  0xf0, 0xff, 0x48, 0x20, 0xfa, 0xf0, 0xff, 0x94, 0x87, 0x7a, 0xf0, 0xff, 0x88, 0x07, 0x76, 0xf0, 
  0xff, 0xd0, 0x08, 0x81, 0xf0, 0xff, 0xec, 0x0f, 0xdf, 0xf0, 0xff, 0xf2, 0xb6, 0xbf, 0xf0, 0xff, 
  0xfc, 0x79, 0x7f, 0xf0, 0xff, 0xff, 0x0f, 0xff, 0xf0
};

// 'rot1', 65x54px
const unsigned char epd_bitmap_rot1 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x01, 0xff, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0xff, 0xf8, 0x03, 0xff, 0x80, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x0e, 0x07, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0xe7, 0x07, 0xff, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x1b, 
  0x83, 0xff, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0xc5, 0xc0, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x18, 
  0x00, 0x32, 0xc0, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x61, 0xf0, 0x00, 0x00, 0x00, 
  0x00, 0x30, 0x00, 0x1c, 0x63, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x30, 0xc0, 0x26, 0x6f, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x30, 0xc0, 0x02, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xf0, 0x00, 0x30, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xf0, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x80, 
  0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x30, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x01, 0x00, 0x60, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x38, 0x01, 0x80, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x01, 0xf8, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x07, 0x8c, 0x03, 0xf1, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x06, 0x07, 0x83, 
  0x80, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x83, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc1, 
  0xe0, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x63, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x01, 
  0xff, 0xc0, 0x43, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc1, 0x83, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0xff, 0x83, 0x02, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x02, 0x63, 0x40, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0xfc, 0x06, 0x71, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x04, 0x40, 
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x18, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0c, 0x10, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x02, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x18, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'rot2', 65x54px
const unsigned char epd_bitmap_rot2 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xf0, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x03, 0xc7, 0x00, 0x2e, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x33, 0x80, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x1c, 0x00, 0xc5, 
  0xc1, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x1c, 0x00, 0xe2, 0xc1, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x38, 
  0x00, 0x78, 0xe1, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x78, 0x00, 0x64, 0x61, 0xff, 0xc0, 0x00, 0x00, 
  0x00, 0x70, 0x00, 0x40, 0x60, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x70, 0x7f, 0x00, 
  0x00, 0x00, 0x00, 0x61, 0x80, 0x00, 0x30, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x61, 0xe0, 0x00, 0x3f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x61, 0xf0, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xc0, 
  0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf1, 0x80, 0x80, 0x60, 0x00, 0x00, 0x00, 0x00, 0x1f, 
  0xf0, 0x00, 0x40, 0x60, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x38, 0x00, 0x60, 0x60, 0x00, 0x00, 0x00, 
  0x03, 0xf8, 0x38, 0x00, 0x78, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x3c, 0x00, 0x71, 0xc0, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0x1e, 0x00, 0xe3, 0x80, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x0f, 0x00, 0x07, 
  0x80, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x07, 0xc0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x03, 
  0xe1, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0xc3, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x03, 
  0x40, 0x01, 0x83, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x06, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x50, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x08, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x18, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1e, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc3, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xe7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x38, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'rot3', 65x54px
const unsigned char epd_bitmap_rot3 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x0e, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0x03, 0xe7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x19, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x03, 0x85, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x0f, 0x02, 
  0xe0, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x18, 0x07, 0x00, 0x60, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x30, 
  0x03, 0x00, 0x70, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x02, 0x00, 0x70, 0x00, 0x00, 0x00, 0x7f, 
  0xf0, 0xf0, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x60, 0x00, 0x00, 0x30, 0x3f, 0x00, 
  0x00, 0x7f, 0xfc, 0x60, 0x00, 0x00, 0x30, 0x7f, 0xc0, 0x00, 0x3f, 0xfc, 0x60, 0x00, 0x06, 0x30, 
  0xff, 0xe0, 0x00, 0x07, 0xf0, 0x61, 0x00, 0x1e, 0x70, 0x7f, 0xe0, 0x00, 0x00, 0x80, 0x30, 0x98, 
  0x0c, 0x70, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x30, 0xf0, 0x04, 0x60, 0x3f, 0xf0, 0x00, 0x00, 0x00, 
  0x38, 0x70, 0x00, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x18, 0x30, 0x00, 0xcf, 0xff, 0x80, 0x00, 
  0x00, 0x00, 0x0c, 0x18, 0x01, 0x80, 0x14, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x03, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x3e, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe3, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc3, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x83, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x02, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x40, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x06, 0x71, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x40, 0x30, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x18, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x10, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xc3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'rot4', 65x54px
const unsigned char epd_bitmap_rot4 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xc0, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 
  0x01, 0xe0, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x03, 0x03, 0xc7, 0x00, 0x00, 0x00, 0x00, 
  0x3f, 0xfe, 0x06, 0x00, 0x13, 0x80, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x8c, 0x00, 0x45, 0xc0, 0x00, 
  0x00, 0x00, 0x3f, 0xf9, 0xc8, 0x00, 0x02, 0xc0, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x78, 0x00, 0x08, 
  0x60, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x38, 0x20, 0x0c, 0x60, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x30, 
  0x70, 0x0c, 0x60, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x30, 0xf0, 0x1e, 0x70, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x20, 0x88, 0x1e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x02, 0x30, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x60, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 
  0x00, 0x60, 0xff, 0x00, 0x00, 0x00, 0x00, 0x38, 0x02, 0x00, 0x40, 0xff, 0xc0, 0x00, 0x00, 0x00, 
  0x18, 0x07, 0x00, 0xc0, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x0c, 0x3f, 0x81, 0xe0, 0x7f, 0xe0, 0x00, 
  0x00, 0x00, 0x06, 0x1f, 0xc3, 0xbd, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x07, 0x1f, 0xff, 
  0xe0, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x0e, 0x03, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xe1, 0xf8, 
  0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
  0x83, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x02, 0x23, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x73, 0xe0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x04, 0x50, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x18, 0xf0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x18, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x03, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc3, 0x80, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'rot5', 65x54px
const unsigned char epd_bitmap_rot5 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x03, 0xf0, 
  0x7e, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x07, 0xc0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 
  0x0f, 0x03, 0xe3, 0x80, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x1e, 0x00, 0x19, 0xc0, 0x00, 0x00, 0x00, 
  0x3f, 0xfb, 0x9c, 0x00, 0xc4, 0xc0, 0x00, 0x00, 0x00, 0x3f, 0xf9, 0xf8, 0x00, 0x3a, 0xe0, 0x04, 
  0x00, 0x00, 0x1f, 0xfc, 0x78, 0x00, 0x18, 0x60, 0x7f, 0xc0, 0x00, 0x07, 0xfc, 0x30, 0x00, 0x1c, 
  0x70, 0xff, 0xc0, 0x00, 0x01, 0xfc, 0x30, 0xc0, 0x26, 0x70, 0xff, 0xe0, 0x00, 0x00, 0x70, 0x70, 
  0xe0, 0x02, 0x38, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x60, 0xf0, 0x00, 0x38, 0x7f, 0xf0, 0x00, 0x00, 
  0x00, 0x60, 0xe0, 0x00, 0x38, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x60, 0x80, 0x00, 0x38, 0x3f, 0x80, 
  0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x77, 0xff, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x7f, 
  0xfc, 0x00, 0x00, 0x00, 0x00, 0x30, 0x01, 0x80, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x01, 
  0xc0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x01, 0xf8, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1e, 0x07, 0xe1, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x07, 0x83, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x3e, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xe3, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0xf0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x83, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
  0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x04, 0x70, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x40, 0x20, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0c, 0x18, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x10, 0xb0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x03, 0xc3, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe7, 0x80, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'ent1', 59x54px
const unsigned char epd_bitmap_ent1 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xfe, 0x0b, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xfe, 0x03, 0x3f, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xfc, 0x03, 0x1f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xf0, 0x01, 0x0f, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xc2, 0x01, 0x0b, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x81, 0x81, 0x8f, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xc0, 0xf8, 0x9b, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x80, 0x3f, 0xfb, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xc0, 0x03, 0xc3, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x80, 0x21, 0x83, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x80, 0x04, 0x40, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x80, 0x0f, 0x87, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x80, 0x1f, 0xc3, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x80, 0x3c, 0xe3, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xf0, 0x38, 0x63, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xe0, 0x20, 0x47, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xe0, 0x00, 0x47, 0xff, 0xdf, 0xff, 0xe0, 0xff, 0xc0, 0x08, 0x03, 0xff, 0xdf, 0xff, 0xe0, 
  0xff, 0x80, 0x00, 0x00, 0xd3, 0xbf, 0xff, 0xe0, 0xff, 0x80, 0x00, 0x00, 0xb7, 0xbf, 0xff, 0xe0, 
  0xff, 0x80, 0x00, 0x00, 0x7f, 0xb6, 0x3f, 0xe0, 0xff, 0x00, 0x00, 0x00, 0xfe, 0x9f, 0xff, 0xe0, 
  0xff, 0x01, 0xc0, 0x01, 0xce, 0x7e, 0xff, 0xe0, 0xff, 0x03, 0xe0, 0x03, 0x3d, 0xf9, 0xff, 0xe0, 
  0xff, 0x03, 0xe0, 0x02, 0xff, 0xf7, 0xe7, 0xe0, 0xfe, 0x03, 0xf0, 0x01, 0x3f, 0xff, 0xfe, 0xe0, 
  0xfe, 0x07, 0xf0, 0x00, 0x07, 0xe3, 0xff, 0x60, 0xfe, 0x07, 0xf0, 0x00, 0x00, 0x9f, 0xff, 0x60, 
  0xfc, 0x06, 0xf0, 0x00, 0x00, 0x0f, 0xfe, 0xe0, 0xfc, 0x00, 0xc0, 0x00, 0x00, 0x0f, 0xfd, 0xe0, 
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xe0, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 
  0xfe, 0x00, 0x20, 0x00, 0x00, 0x03, 0xff, 0x80, 0xfe, 0x01, 0xe0, 0x00, 0x00, 0x07, 0xde, 0x40, 
  0xfe, 0x03, 0xe0, 0x00, 0x00, 0x01, 0xdf, 0xc0, 0xfe, 0x01, 0xb0, 0x00, 0x00, 0x04, 0xef, 0x20, 
  0xf8, 0x01, 0x81, 0x00, 0x3c, 0x04, 0xf8, 0xe0, 0xe0, 0x00, 0xa0, 0xf9, 0xfe, 0x08, 0xff, 0xe0, 
  0x80, 0x00, 0x20, 0x01, 0xfc, 0x30, 0xff, 0xe0, 0x80, 0x03, 0xf0, 0x01, 0xfc, 0x00, 0x7f, 0xe0, 
  0xc0, 0x07, 0xf0, 0x00, 0xfe, 0x00, 0x3f, 0xe0, 0x80, 0x07, 0xe0, 0x00, 0xff, 0x00, 0x3f, 0xe0, 
  0x80, 0x0f, 0xe0, 0x00, 0xff, 0x80, 0x3f, 0xe0, 0x81, 0x0f, 0xe0, 0x01, 0xff, 0x80, 0x3f, 0xe0, 
  0xc3, 0x3f, 0xc0, 0x01, 0xff, 0x00, 0x1f, 0xe0, 0xe0, 0x7f, 0xc0, 0x01, 0xff, 0x02, 0x0f, 0xe0, 
  0xf9, 0xff, 0xe0, 0x00, 0xff, 0x1f, 0x9f, 0xe0, 0xff, 0xff, 0xdf, 0xa3, 0xff, 0x0d, 0xdf, 0xe0, 
  0xff, 0xff, 0xbe, 0xef, 0xff, 0x80, 0x3f, 0xe0, 0xff, 0xff, 0x8d, 0xef, 0xff, 0xf0, 0x7f, 0xe0, 
  0xff, 0xff, 0xc0, 0x9f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xe0
};
// 'ent2', 59x54px
const unsigned char epd_bitmap_ent2 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xfe, 0x0b, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xfe, 0x03, 0x3f, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xfc, 0x03, 0x1f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xf0, 0x01, 0x0f, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xc2, 0x01, 0x0b, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x81, 0x81, 0x8f, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xc0, 0xf8, 0x9b, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x80, 0x3f, 0xfb, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xc0, 0x03, 0xc3, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x80, 0x21, 0x83, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x80, 0x04, 0x43, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x80, 0x0f, 0x84, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x80, 0x1f, 0xc3, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x80, 0x3c, 0xe3, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xf0, 0x38, 0x63, 0xff, 0xdf, 0xff, 0xe0, 0xff, 0xf0, 0x20, 0x47, 0xff, 0xbf, 0xff, 0xe0, 
  0xff, 0xe0, 0x00, 0x47, 0xff, 0x6f, 0xff, 0xe0, 0xff, 0xe0, 0x08, 0x0f, 0xfe, 0xdf, 0xff, 0xe0, 
  0xff, 0xc0, 0x00, 0x0f, 0xed, 0xdf, 0xff, 0xe0, 0xff, 0x80, 0x00, 0x01, 0xd3, 0xbf, 0xff, 0xe0, 
  0xff, 0x80, 0x00, 0x00, 0xb7, 0xbe, 0x7f, 0xe0, 0xff, 0x80, 0x00, 0x00, 0x6d, 0xb3, 0xbf, 0xe0, 
  0xff, 0x00, 0x00, 0x00, 0xf6, 0x9f, 0x7f, 0xe0, 0xff, 0x01, 0xe0, 0x01, 0xcc, 0x7d, 0xe3, 0xe0, 
  0xff, 0x03, 0xe0, 0x02, 0x3f, 0xf3, 0xff, 0xe0, 0xfe, 0x03, 0xf0, 0x01, 0xff, 0xd7, 0xff, 0xe0, 
  0xfe, 0x03, 0xf0, 0x00, 0x3f, 0xfd, 0xff, 0x60, 0xfe, 0x07, 0xf0, 0x00, 0x07, 0xe3, 0xfe, 0x60, 
  0xfe, 0x07, 0xf0, 0x00, 0x00, 0x0f, 0xfe, 0xe0, 0xfc, 0x06, 0xf0, 0x00, 0x00, 0x04, 0x7f, 0xe0, 
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x03, 0xbf, 0x80, 
  0xfe, 0x00, 0x00, 0x00, 0x00, 0x07, 0xde, 0x40, 0xff, 0x00, 0x20, 0x00, 0x00, 0x07, 0xdf, 0xc0, 
  0xfe, 0x01, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xa0, 0xfe, 0x03, 0xe0, 0x00, 0x00, 0x09, 0xf0, 0x60, 
  0xfc, 0x01, 0x80, 0x00, 0x00, 0x09, 0xff, 0xe0, 0xf8, 0x00, 0x82, 0xf0, 0x3c, 0x09, 0xff, 0xe0, 
  0xe0, 0x00, 0x21, 0x03, 0xfe, 0x11, 0xff, 0xe0, 0x80, 0x01, 0x60, 0x03, 0xf8, 0x40, 0x7f, 0xe0, 
  0x80, 0x03, 0xe0, 0x01, 0xf8, 0x00, 0x3f, 0xe0, 0x80, 0x07, 0xe0, 0x00, 0xfc, 0x00, 0x3f, 0xe0, 
  0x80, 0x07, 0xe0, 0x00, 0xfe, 0x00, 0x3f, 0xe0, 0x80, 0x0f, 0xc0, 0x01, 0xff, 0x00, 0x3f, 0xe0, 
  0xc3, 0x0f, 0xc0, 0x01, 0xff, 0x00, 0x1f, 0xe0, 0xc3, 0x3f, 0x80, 0x01, 0xfe, 0x02, 0x0f, 0xe0, 
  0xf0, 0x7f, 0xc0, 0x00, 0xfe, 0x0f, 0x9f, 0xe0, 0xff, 0xff, 0xce, 0x23, 0xff, 0x0d, 0xdf, 0xe0, 
  0xff, 0xff, 0xae, 0xef, 0xff, 0x80, 0x3f, 0xe0, 0xff, 0xff, 0x8d, 0xef, 0xff, 0xf0, 0x7f, 0xe0, 
  0xff, 0xff, 0xc0, 0x9f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xe0
};
// 'ent3', 59x54px
const unsigned char epd_bitmap_ent3 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xf0, 0xef, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xf8, 0x0e, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xf8, 0x0c, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xf0, 0x06, 0x3f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0x06, 0x3f, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x04, 0x02, 0x1f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x03, 0x03, 0x37, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x00, 0xfb, 0xf7, 0xff, 0xff, 0xff, 0xe0, 0xfe, 0x00, 0x1f, 0xef, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x00, 0x07, 0x07, 0xff, 0xff, 0xff, 0xe0, 0xfe, 0x00, 0x02, 0x8f, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x00, 0x1a, 0x8f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x00, 0x3f, 0x1f, 0xff, 0xff, 0xff, 0xe0, 
  0xfe, 0x00, 0x7f, 0x83, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0x71, 0x87, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xc0, 0x61, 0x9f, 0xff, 0x3f, 0xff, 0xe0, 0xff, 0xc0, 0x41, 0x9f, 0xfe, 0xbf, 0xff, 0xe0, 
  0xff, 0x80, 0x01, 0x1f, 0xfd, 0xbf, 0xff, 0xe0, 0xff, 0x80, 0x00, 0x1f, 0xfb, 0x7f, 0xff, 0xe0, 
  0xff, 0x00, 0x00, 0x1f, 0xd7, 0x7f, 0xc7, 0xe0, 0xff, 0x00, 0x00, 0x07, 0x5e, 0xff, 0xff, 0xe0, 
  0xfe, 0x00, 0x00, 0x02, 0xde, 0x78, 0x7d, 0xe0, 0xfe, 0x00, 0x00, 0x01, 0xb2, 0x46, 0xfd, 0xe0, 
  0xfc, 0x03, 0x80, 0x03, 0xfb, 0xf9, 0xfd, 0xe0, 0xfc, 0x07, 0xc0, 0x06, 0x7f, 0xf7, 0xfb, 0xe0, 
  0xfc, 0x0f, 0xc0, 0x09, 0xff, 0xdf, 0xf7, 0xe0, 0xf8, 0x0f, 0xc0, 0x07, 0xff, 0x2f, 0xf7, 0xe0, 
  0xf8, 0x1f, 0xe0, 0x00, 0x1f, 0xd7, 0xff, 0x60, 0xf8, 0x1f, 0xe0, 0x00, 0x03, 0x09, 0xfd, 0xe0, 
  0xf8, 0x1f, 0xc0, 0x00, 0x00, 0x06, 0xff, 0xe0, 0xf0, 0x0b, 0x00, 0x00, 0x00, 0x0f, 0xbf, 0xe0, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe1, 0xe0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xe0, 
  0xf9, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 0xfe, 0x02, 0xc0, 0x00, 0x00, 0x07, 0xff, 0xe0, 
  0xfc, 0x0f, 0xc0, 0x00, 0x00, 0x11, 0xff, 0xe0, 0xfc, 0x07, 0xc0, 0x00, 0x00, 0x31, 0xff, 0xe0, 
  0xfc, 0x07, 0x46, 0xf0, 0x00, 0x71, 0xff, 0xe0, 0xf0, 0x02, 0x01, 0x01, 0xe0, 0x80, 0x7f, 0xe0, 
  0xc0, 0x00, 0xc0, 0x01, 0xf0, 0x00, 0x7f, 0xe0, 0x80, 0x01, 0xc0, 0x00, 0xf0, 0x00, 0x7f, 0xe0, 
  0x80, 0x03, 0xc0, 0x00, 0xf8, 0x00, 0x3f, 0xe0, 0xc0, 0x07, 0xc0, 0x01, 0xfe, 0x00, 0x1f, 0xe0, 
  0x80, 0x0f, 0xe0, 0x01, 0xff, 0x00, 0x0f, 0xe0, 0x80, 0x0f, 0xc0, 0x00, 0xff, 0x04, 0x1f, 0xe0, 
  0x81, 0x0f, 0x80, 0x00, 0xfe, 0x0f, 0xdf, 0xe0, 0xc3, 0x7f, 0x82, 0x03, 0xff, 0x0d, 0xff, 0xe0, 
  0xe0, 0x7f, 0xa6, 0x6b, 0xff, 0x80, 0x3f, 0xe0, 0xf8, 0xff, 0x8d, 0xef, 0xff, 0xf0, 0x7f, 0xe0, 
  0xff, 0xff, 0xc0, 0x9f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xe0
};
// 'ent4', 59x54px
const unsigned char epd_bitmap_ent4 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xf0, 0xef, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xf8, 0x0e, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xf8, 0x0c, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xf0, 0x06, 0x3f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0x06, 0x3f, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x04, 0x02, 0x1f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x03, 0x03, 0x37, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x00, 0xfb, 0xf7, 0xff, 0xff, 0xff, 0xe0, 0xfe, 0x00, 0x1f, 0xef, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x00, 0x07, 0x07, 0xff, 0xff, 0xff, 0xe0, 0xfe, 0x00, 0x02, 0x8f, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x00, 0x1a, 0x8f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x00, 0x3f, 0x1f, 0xff, 0xff, 0xff, 0xe0, 
  0xfe, 0x00, 0x7f, 0x83, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0x71, 0x87, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xc0, 0x61, 0x9f, 0xff, 0x3f, 0xff, 0xe0, 0xff, 0xc0, 0x41, 0x9f, 0xff, 0xbf, 0xff, 0xe0, 
  0xff, 0x80, 0x01, 0x1f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x80, 0x00, 0x1f, 0xfb, 0x7f, 0xff, 0xe0, 
  0xff, 0x00, 0x00, 0x1f, 0xd7, 0x7f, 0xff, 0xe0, 0xff, 0x00, 0x00, 0x07, 0x5e, 0xff, 0xcf, 0xe0, 
  0xfe, 0x00, 0x00, 0x02, 0xde, 0x78, 0xbf, 0xe0, 0xfe, 0x00, 0x00, 0x01, 0xb2, 0x46, 0x7f, 0xe0, 
  0xfc, 0x03, 0x00, 0x03, 0xfb, 0xf9, 0xfd, 0xe0, 0xfc, 0x07, 0xc0, 0x06, 0x7f, 0xf7, 0xfd, 0xe0, 
  0xfc, 0x0f, 0xc0, 0x09, 0xff, 0xdf, 0xfb, 0xe0, 0xf8, 0x0f, 0xc0, 0x07, 0xff, 0x2f, 0xff, 0xe0, 
  0xf8, 0x1f, 0xe0, 0x00, 0x1f, 0xd7, 0xf7, 0xe0, 0xf8, 0x1f, 0xe0, 0x00, 0x03, 0x3f, 0xf7, 0x60, 
  0xf8, 0x1f, 0xc0, 0x00, 0x00, 0x1f, 0xfe, 0xe0, 0xf0, 0x0b, 0x00, 0x00, 0x00, 0x01, 0xfd, 0xe0, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xbf, 0x60, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xdc, 0xe0, 
  0xf9, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe3, 0xe0, 0xfe, 0x02, 0xc0, 0x00, 0x00, 0x07, 0xff, 0xe0, 
  0xfc, 0x07, 0xc0, 0x00, 0x00, 0x11, 0xff, 0xe0, 0xfc, 0x07, 0xc0, 0x00, 0x00, 0x31, 0xff, 0xe0, 
  0xfc, 0x07, 0x46, 0xf0, 0x00, 0x71, 0xff, 0xe0, 0xf0, 0x02, 0x01, 0x01, 0xe0, 0x80, 0x7f, 0xe0, 
  0xc0, 0x00, 0xc0, 0x01, 0xf0, 0x00, 0x7f, 0xe0, 0x80, 0x01, 0xc0, 0x00, 0xf0, 0x00, 0x7f, 0xe0, 
  0x80, 0x03, 0xc0, 0x00, 0xf8, 0x00, 0x3f, 0xe0, 0xc0, 0x07, 0xc0, 0x01, 0xfe, 0x00, 0x1f, 0xe0, 
  0x80, 0x0f, 0xe0, 0x01, 0xff, 0x00, 0x0f, 0xe0, 0x80, 0x0f, 0xc0, 0x00, 0xff, 0x04, 0x1f, 0xe0, 
  0x81, 0x0f, 0x80, 0x00, 0xfe, 0x0f, 0xdf, 0xe0, 0xc3, 0x7f, 0x82, 0x03, 0xff, 0x0d, 0xff, 0xe0, 
  0xe0, 0x7f, 0xa6, 0x6b, 0xff, 0x80, 0x3f, 0xe0, 0xf8, 0xff, 0x8d, 0xef, 0xff, 0xf0, 0x7f, 0xe0, 
  0xff, 0xff, 0xc0, 0x9f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xe0
};
// 'ent5', 59x54px
const unsigned char epd_bitmap_ent5 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xfc, 0x3b, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xfe, 0x0b, 0xbf, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xfe, 0x03, 0x3f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xfc, 0x03, 0x1f, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xf0, 0x01, 0x0f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc2, 0x01, 0x0b, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x81, 0x81, 0x8f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0xfc, 0xbb, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x80, 0x07, 0xfb, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0x03, 0xc3, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x80, 0x21, 0x03, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x80, 0x06, 0x84, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0x80, 0x1f, 0x83, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x80, 0x1f, 0xc3, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xe0, 0x3c, 0xe3, 0xff, 0xdf, 0xff, 0xe0, 0xff, 0xf0, 0x30, 0x67, 0xff, 0xbf, 0xff, 0xe0, 
  0xff, 0xe0, 0x20, 0x47, 0xff, 0x7f, 0xff, 0xe0, 0xff, 0xe0, 0x00, 0x47, 0xff, 0xdf, 0xff, 0xe0, 
  0xff, 0xc0, 0x00, 0x0f, 0xef, 0xdf, 0xff, 0xe0, 0xff, 0x80, 0x00, 0x01, 0xd3, 0xbf, 0xff, 0xe0, 
  0xff, 0x80, 0x00, 0x00, 0xb7, 0xbf, 0xff, 0xe0, 0xff, 0x80, 0x00, 0x00, 0x6d, 0xb3, 0xbf, 0xe0, 
  0xff, 0x00, 0x00, 0x00, 0xf6, 0x9f, 0x7f, 0xe0, 0xff, 0x01, 0xe0, 0x01, 0xcc, 0x7d, 0xff, 0xe0, 
  0xff, 0x03, 0xe0, 0x02, 0x3f, 0xf1, 0xc7, 0xe0, 0xfe, 0x03, 0xf0, 0x01, 0xff, 0xd3, 0xde, 0xe0, 
  0xfe, 0x03, 0xf0, 0x00, 0x3f, 0xff, 0xff, 0x60, 0xfe, 0x07, 0xf0, 0x00, 0x07, 0xe3, 0xff, 0x60, 
  0xfe, 0x07, 0xf0, 0x00, 0x00, 0x1f, 0xfe, 0xe0, 0xfc, 0x06, 0xf0, 0x00, 0x00, 0x0f, 0xfd, 0xe0, 
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xe0, 
  0xfe, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x80, 0xff, 0x00, 0x20, 0x00, 0x00, 0x03, 0xde, 0x40, 
  0xfe, 0x01, 0xe0, 0x00, 0x00, 0x03, 0xdf, 0xc0, 0xfe, 0x03, 0xe0, 0x00, 0x00, 0x09, 0xef, 0x20, 
  0xfc, 0x01, 0x80, 0x00, 0x00, 0x09, 0xf8, 0xe0, 0xf8, 0x00, 0x82, 0xf0, 0x3c, 0x09, 0xff, 0xe0, 
  0xe0, 0x00, 0x21, 0x03, 0xfe, 0x11, 0xff, 0xe0, 0x80, 0x01, 0x60, 0x03, 0xf8, 0x40, 0x7f, 0xe0, 
  0x80, 0x03, 0xe0, 0x01, 0xf8, 0x00, 0x3f, 0xe0, 0x80, 0x07, 0xe0, 0x00, 0xfc, 0x00, 0x3f, 0xe0, 
  0x80, 0x07, 0xe0, 0x00, 0xfe, 0x00, 0x3f, 0xe0, 0x80, 0x0f, 0xc0, 0x01, 0xff, 0x00, 0x3f, 0xe0, 
  0xc3, 0x0f, 0xc0, 0x01, 0xff, 0x00, 0x1f, 0xe0, 0xc3, 0x3f, 0x80, 0x01, 0xfe, 0x02, 0x0f, 0xe0, 
  0xf0, 0x7f, 0xc0, 0x00, 0xfe, 0x0f, 0x9f, 0xe0, 0xff, 0xff, 0xce, 0x23, 0xff, 0x0d, 0xdf, 0xe0, 
  0xff, 0xff, 0xae, 0xef, 0xff, 0x80, 0x3f, 0xe0, 0xff, 0xff, 0x8d, 0xef, 0xff, 0xf0, 0x7f, 0xe0, 
  0xff, 0xff, 0xc0, 0x9f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xe0
};


// 'sal1', 65x54px
const unsigned char epd_bitmap_sal1 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfa, 0x07, 0xff, 0xff, 0xff, 
  0xff, 0x80, 0xff, 0xff, 0xc0, 0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0x80, 0x00, 0x7f, 
  0xff, 0xff, 0xff, 0x80, 0xff, 0xfc, 0x00, 0x00, 0xfc, 0xf0, 0x3f, 0xff, 0x80, 0xff, 0xf8, 0x00, 
  0x03, 0xfc, 0x00, 0x0f, 0xf7, 0x80, 0xff, 0xf0, 0x00, 0x07, 0xf0, 0x80, 0x07, 0xc7, 0x80, 0xff, 
  0xe0, 0x00, 0x0f, 0xc0, 0x00, 0x0f, 0xaf, 0x80, 0xff, 0xc0, 0x00, 0x1f, 0x80, 0x60, 0x7e, 0x4f, 
  0x80, 0xff, 0x80, 0x00, 0x3e, 0x00, 0x30, 0xfc, 0x1f, 0x80, 0xff, 0x00, 0x00, 0x3c, 0x00, 0x18, 
  0x00, 0x3f, 0x80, 0xff, 0x00, 0x00, 0x38, 0x00, 0x04, 0x00, 0x7f, 0x80, 0xfe, 0x00, 0x00, 0x70, 
  0x00, 0x06, 0x00, 0x3f, 0x80, 0xfe, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x1f, 0x80, 0xfc, 0x00, 
  0x00, 0xc0, 0x00, 0x00, 0xf0, 0x8f, 0x80, 0xfc, 0x00, 0x00, 0xc0, 0x00, 0x00, 0xf4, 0xef, 0x80, 
  0xf8, 0x00, 0x00, 0x80, 0x00, 0x07, 0xcf, 0xff, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x01, 0x81, 0x00, 
  0xd7, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x01, 0x82, 0x00, 0xdf, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x03, 
  0x84, 0x00, 0x7f, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x3f, 0x80, 0xf8, 0x00, 0x00, 
  0x00, 0x06, 0x00, 0x00, 0x1f, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x20, 0x0f, 0x80, 0xf8, 
  0x00, 0x00, 0x30, 0x0c, 0x00, 0x15, 0x07, 0x80, 0xf8, 0x00, 0x00, 0x38, 0x08, 0x01, 0x8f, 0xe7, 
  0x80, 0xf8, 0x00, 0x00, 0x18, 0x10, 0x03, 0xe1, 0xff, 0x80, 0xf8, 0x07, 0xf0, 0x00, 0x00, 0x07, 
  0xff, 0xff, 0x80, 0xf8, 0x1f, 0xfc, 0x00, 0x00, 0x07, 0xff, 0xff, 0x80, 0xf8, 0x3f, 0xfe, 0x00, 
  0x00, 0x07, 0xff, 0xff, 0x80, 0xf8, 0x3f, 0xff, 0x01, 0x00, 0x07, 0xff, 0xff, 0x80, 0xfc, 0x7f, 
  0xff, 0x1e, 0x40, 0x07, 0xff, 0xff, 0x80, 0xfc, 0x7f, 0xfe, 0x7e, 0x00, 0x0f, 0xff, 0xff, 0x80, 
  0xfe, 0xff, 0xfb, 0xff, 0xfc, 0x0d, 0xff, 0xff, 0x80, 0xff, 0xe0, 0x0f, 0xff, 0xfe, 0x1e, 0xff, 
  0xff, 0x80, 0xff, 0x00, 0x0f, 0xbf, 0xff, 0x1f, 0xff, 0xfd, 0x80, 0xfe, 0xc0, 0x7f, 0x7f, 0xff, 
  0xff, 0xbf, 0xf9, 0x80, 0xfc, 0xc1, 0xfe, 0xfe, 0xff, 0xfe, 0xbf, 0xc1, 0x80, 0xfc, 0x23, 0xfe, 
  0xff, 0x7f, 0xfe, 0xd4, 0x03, 0x80, 0xf8, 0x07, 0xf4, 0xff, 0x4e, 0x3c, 0xc0, 0x07, 0x80, 0xf8, 
  0x07, 0xe1, 0xfe, 0x3b, 0xf5, 0xe0, 0x0f, 0x80, 0xf8, 0x07, 0xc1, 0xfe, 0x7f, 0xfd, 0xe0, 0x3f, 
  0x80, 0xfc, 0x00, 0x01, 0xfe, 0xf7, 0xfd, 0xe3, 0xff, 0x80, 0xfe, 0x00, 0x00, 0xfd, 0xff, 0xf8, 
  0xef, 0xff, 0x80, 0xff, 0x00, 0x00, 0x7d, 0xff, 0xf8, 0xef, 0xff, 0x80, 0xff, 0xc0, 0x20, 0x30, 
  0xcf, 0x30, 0x67, 0xff, 0x80, 0xff, 0xc0, 0x70, 0x00, 0x00, 0x08, 0x07, 0xff, 0x80, 0xff, 0xc0, 
  0x70, 0x00, 0x01, 0x38, 0x07, 0xff, 0x80, 0xff, 0xba, 0x70, 0x07, 0x07, 0xfc, 0x0f, 0xff, 0x80, 
  0xff, 0xbe, 0xf0, 0x07, 0xff, 0xff, 0x3d, 0xff, 0x80, 0xff, 0xdf, 0xf0, 0x07, 0xff, 0xff, 0xfb, 
  0xff, 0x80, 0xff, 0xff, 0xfc, 0x07, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfe, 0x8f, 0xff, 
  0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xf5, 0x1f, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfa, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0x80
};
// 'sal2', 65x54px
const unsigned char epd_bitmap_sal2 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 
  0xff, 0x80, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xc0, 0x00, 0x7f, 
  0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x80, 0xff, 0xfc, 0x00, 
  0x01, 0xfc, 0xe0, 0x1f, 0xff, 0x80, 0xff, 0xf8, 0x00, 0x07, 0xfd, 0x00, 0x0f, 0xf7, 0x80, 0xff, 
  0xf0, 0x00, 0x0f, 0xe0, 0x80, 0x07, 0xcf, 0x80, 0xff, 0xe0, 0x00, 0x1f, 0x80, 0x40, 0x1f, 0x2f, 
  0x80, 0xff, 0xc0, 0x00, 0x3f, 0x00, 0x20, 0x7e, 0x0f, 0x80, 0xff, 0x80, 0x00, 0x3e, 0x00, 0x10, 
  0xe0, 0x1f, 0x80, 0xff, 0x00, 0x00, 0x3c, 0x00, 0x08, 0x00, 0x7f, 0x80, 0xff, 0x00, 0x00, 0x38, 
  0x00, 0x04, 0x00, 0x3f, 0x80, 0xfe, 0x00, 0x00, 0x70, 0x00, 0x02, 0x00, 0x1f, 0x80, 0xfe, 0x00, 
  0x00, 0x60, 0x00, 0x01, 0x80, 0x0f, 0x80, 0xfc, 0x00, 0x00, 0xc0, 0x00, 0x00, 0xf0, 0xcf, 0x80, 
  0xfc, 0x00, 0x00, 0x80, 0x00, 0x0f, 0xfc, 0xef, 0x80, 0xf8, 0x00, 0x00, 0x80, 0x00, 0x00, 0x87, 
  0xf7, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x01, 0xc1, 0x00, 0xd7, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x01, 
  0x82, 0x00, 0x7f, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x03, 0x84, 0x00, 0x7f, 0x80, 0xf8, 0x00, 0x00, 
  0x00, 0x07, 0x00, 0x00, 0x3f, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x07, 0x00, 0x20, 0x1f, 0x80, 0xf8, 
  0x00, 0x00, 0x00, 0x0e, 0x00, 0x30, 0x0f, 0x80, 0xf8, 0x00, 0x00, 0x30, 0x0c, 0x00, 0x1d, 0x47, 
  0x80, 0xf8, 0x00, 0x00, 0x38, 0x08, 0x01, 0xcf, 0xe7, 0x80, 0xf8, 0x01, 0xe0, 0x18, 0x10, 0x03, 
  0xff, 0xff, 0x80, 0xf8, 0x07, 0xf0, 0x00, 0x10, 0x03, 0xff, 0xff, 0x80, 0xf8, 0x1f, 0xfc, 0x00, 
  0x00, 0x07, 0xff, 0xff, 0x80, 0xf8, 0x3f, 0xfe, 0x00, 0x00, 0x07, 0xff, 0xff, 0x80, 0xf8, 0x3f, 
  0xff, 0x01, 0x00, 0x07, 0xff, 0xff, 0x80, 0xfc, 0x7f, 0xff, 0x3c, 0x00, 0x07, 0xff, 0xff, 0x80, 
  0xfc, 0xff, 0xfc, 0xfe, 0x80, 0x1b, 0xff, 0xff, 0x80, 0xfe, 0xff, 0xf3, 0xff, 0xcc, 0x1d, 0xff, 
  0xff, 0x80, 0xff, 0xe0, 0x0f, 0xff, 0xfc, 0x1e, 0xff, 0xff, 0x80, 0xff, 0x40, 0x3f, 0xbf, 0xfe, 
  0x3f, 0x7f, 0xfd, 0x80, 0xfe, 0xc0, 0x7f, 0x7f, 0xff, 0xbf, 0xbf, 0xf1, 0x80, 0xfc, 0x81, 0xfe, 
  0xfe, 0xff, 0xfe, 0xbe, 0x41, 0x80, 0xf8, 0x43, 0xf6, 0xff, 0x7f, 0xfe, 0xc0, 0x03, 0x80, 0xf8, 
  0x07, 0xf4, 0xff, 0x4e, 0x3c, 0xc0, 0x07, 0x80, 0xf8, 0x07, 0xe1, 0xfe, 0x7b, 0xed, 0xe0, 0x1f, 
  0x80, 0xf8, 0x03, 0x81, 0xfe, 0xff, 0xfd, 0xe0, 0x7f, 0x80, 0xfc, 0x00, 0x00, 0xff, 0xff, 0xfd, 
  0xe3, 0xff, 0x80, 0xfe, 0x00, 0x00, 0xfd, 0xff, 0xf8, 0xef, 0xff, 0x80, 0xff, 0x80, 0x00, 0x79, 
  0xff, 0xf0, 0xe7, 0xff, 0x80, 0xff, 0xc0, 0x20, 0x30, 0x0f, 0x00, 0x07, 0xff, 0x80, 0xff, 0xc0, 
  0x70, 0x00, 0x00, 0x18, 0x07, 0xff, 0x80, 0xff, 0xba, 0x70, 0x00, 0x01, 0xfc, 0x0f, 0xff, 0x80, 
  0xff, 0xbe, 0xf0, 0x07, 0x07, 0xff, 0x3d, 0xff, 0x80, 0xff, 0xdf, 0xf0, 0x07, 0xff, 0xff, 0xfb, 
  0xff, 0x80, 0xff, 0xff, 0xfc, 0x07, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfe, 0x8f, 0xff, 
  0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xf5, 0x1f, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfa, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0x80
};
// 'sal3', 65x54px
const unsigned char epd_bitmap_sal3 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfe, 0x07, 0xff, 
  0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0x80, 
  0x00, 0x7f, 0xff, 0xff, 0xff, 0x80, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 
  0xf8, 0x00, 0x03, 0xfc, 0x40, 0x0f, 0xff, 0x80, 0xff, 0xf0, 0x00, 0x07, 0xf0, 0x80, 0x07, 0xe3, 
  0x80, 0xff, 0xe0, 0x00, 0x0f, 0xe0, 0x40, 0x0f, 0xd7, 0x80, 0xff, 0xc0, 0x00, 0x1f, 0x80, 0x20, 
  0x3f, 0x2f, 0x80, 0xff, 0x80, 0x00, 0x3e, 0x00, 0x10, 0xfe, 0x0f, 0x80, 0xff, 0x00, 0x00, 0x3c, 
  0x00, 0x09, 0x00, 0x1f, 0x80, 0xff, 0x00, 0x00, 0x38, 0x00, 0x04, 0x00, 0x3f, 0x80, 0xff, 0x00, 
  0x00, 0x70, 0x00, 0x02, 0x00, 0x1f, 0x80, 0xfe, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x0f, 0x80, 
  0xfc, 0x00, 0x00, 0x40, 0x00, 0x20, 0x50, 0x4f, 0x80, 0xfc, 0x00, 0x00, 0xc0, 0x00, 0x00, 0xfe, 
  0x6f, 0x80, 0xf8, 0x00, 0x00, 0x80, 0x00, 0x0f, 0xff, 0xf7, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x80, 0xeb, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x01, 0xe1, 0x00, 0x5f, 0x80, 0xf8, 0x00, 0x00, 
  0x00, 0x03, 0xc2, 0x00, 0x3f, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x1f, 0x80, 0xf8, 
  0x00, 0x00, 0x00, 0x07, 0x84, 0x00, 0x0f, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x30, 0x0f, 
  0x80, 0xf8, 0x00, 0x00, 0x20, 0x0e, 0x00, 0x18, 0x83, 0x80, 0xf8, 0x00, 0x00, 0x38, 0x08, 0x00, 
  0x4f, 0xf3, 0x80, 0xf8, 0x00, 0x00, 0x38, 0x10, 0x00, 0xf0, 0xff, 0x80, 0xf8, 0x05, 0xe0, 0x08, 
  0x00, 0x03, 0xff, 0xff, 0x80, 0xf8, 0x1f, 0xfc, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 0xf8, 0x3f, 
  0xfe, 0x00, 0x00, 0x07, 0xff, 0xff, 0x80, 0xf8, 0x3f, 0xff, 0x00, 0x00, 0x07, 0xff, 0xff, 0x80, 
  0xfc, 0x7f, 0xff, 0x3c, 0x80, 0x07, 0xff, 0xff, 0x80, 0xfc, 0x7f, 0xfe, 0xff, 0x00, 0x0f, 0xff, 
  0xff, 0x80, 0xfc, 0x48, 0x31, 0xff, 0xcc, 0x19, 0xff, 0xff, 0x80, 0xfe, 0x20, 0x0f, 0xff, 0xfc, 
  0x1e, 0xff, 0xf9, 0x80, 0xfe, 0xe0, 0x1f, 0xbf, 0xfc, 0x3f, 0x7f, 0xf1, 0x80, 0xfe, 0x40, 0x7f, 
  0x7f, 0xfe, 0x3f, 0xbf, 0x83, 0x80, 0xfc, 0x27, 0xfe, 0xff, 0xff, 0xff, 0xdc, 0x07, 0x80, 0xf8, 
  0x0f, 0xfd, 0xff, 0x7f, 0xfe, 0xe0, 0x0f, 0x80, 0xf8, 0x1f, 0xe1, 0xff, 0x3b, 0xf6, 0xe0, 0x3f, 
  0x80, 0xfc, 0x1f, 0xc1, 0xfc, 0x7b, 0xec, 0xf0, 0xff, 0x80, 0xfe, 0x0f, 0x01, 0xfc, 0xff, 0xfc, 
  0xf1, 0xff, 0x80, 0xff, 0x00, 0x01, 0xff, 0xff, 0xfc, 0xf7, 0xff, 0x80, 0xff, 0x00, 0x01, 0xfb, 
  0xff, 0xf8, 0xf7, 0xff, 0x80, 0xff, 0x80, 0x00, 0xf9, 0xff, 0x70, 0xf7, 0xff, 0x80, 0xff, 0x80, 
  0x20, 0x00, 0x0e, 0x00, 0x07, 0xff, 0x80, 0xff, 0x80, 0x70, 0x00, 0x00, 0x38, 0x0f, 0xff, 0x80, 
  0xff, 0x76, 0x70, 0x00, 0x03, 0xfe, 0x3d, 0xff, 0x80, 0xff, 0x7f, 0xf0, 0x0f, 0x0f, 0xff, 0xfb, 
  0xff, 0x80, 0xff, 0xd3, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xdd, 0x1f, 0xff, 
  0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfb, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0x80
};
// 'sal4', 65x54px
const unsigned char epd_bitmap_sal4 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfa, 0x07, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xc0, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0x80, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x80, 0xff, 
  0xfc, 0x00, 0x00, 0xff, 0x70, 0x3f, 0xff, 0x80, 0xff, 0xf8, 0x00, 0x03, 0xfc, 0x00, 0x0f, 0xf9, 
  0x80, 0xff, 0xf0, 0x00, 0x07, 0xf0, 0x40, 0x07, 0xf5, 0x80, 0xff, 0xe0, 0x00, 0x0f, 0xc0, 0x20, 
  0x0f, 0xef, 0x80, 0xff, 0xc0, 0x00, 0x1f, 0x80, 0x10, 0x7f, 0x97, 0x80, 0xff, 0x80, 0x00, 0x3e, 
  0x00, 0x08, 0xfe, 0x0f, 0x80, 0xff, 0x00, 0x00, 0x3c, 0x00, 0x05, 0x00, 0x1f, 0x80, 0xff, 0x00, 
  0x00, 0x38, 0x00, 0x02, 0x00, 0x1f, 0x80, 0xfe, 0x00, 0x00, 0x70, 0x00, 0x01, 0x00, 0x0f, 0x80, 
  0xfe, 0x00, 0x00, 0x60, 0x00, 0x10, 0xc0, 0x07, 0x80, 0xfc, 0x00, 0x00, 0xc0, 0x00, 0x30, 0x28, 
  0x27, 0x80, 0xfc, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x7f, 0x37, 0x80, 0xf8, 0x00, 0x00, 0x80, 0x00, 
  0x01, 0x63, 0xfb, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x01, 0xf8, 0xc0, 0x75, 0x80, 0xf8, 0x00, 0x00, 
  0x00, 0x01, 0xe0, 0x80, 0x2f, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x03, 0xc1, 0x00, 0x1f, 0x80, 0xf8, 
  0x00, 0x00, 0x00, 0x07, 0xc2, 0x00, 0x0f, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xc2, 0x10, 0x0f, 
  0x80, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0e, 0x43, 0x80, 0xf8, 0x00, 0x00, 0x30, 0x0e, 0x00, 
  0x07, 0xe1, 0x80, 0xf8, 0x00, 0x00, 0x38, 0x0e, 0x00, 0x10, 0x79, 0x80, 0xf8, 0x00, 0x00, 0x18, 
  0x18, 0x00, 0x7f, 0xff, 0x80, 0xf8, 0x07, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0xf8, 0x1f, 
  0xfc, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 0xf8, 0x3f, 0xfe, 0x00, 0x00, 0x07, 0xff, 0xff, 0x80, 
  0xf8, 0x3f, 0xff, 0x03, 0x00, 0x07, 0xff, 0xff, 0x80, 0xfc, 0x7f, 0xff, 0x38, 0x00, 0x07, 0xff, 
  0xff, 0x80, 0xfc, 0x7f, 0xfe, 0xfc, 0x00, 0x0f, 0xff, 0xff, 0x80, 0xfe, 0x70, 0x17, 0xff, 0xfc, 
  0x1e, 0xff, 0xe3, 0x80, 0xff, 0x60, 0x0f, 0xff, 0xf8, 0x1f, 0xff, 0xe3, 0x80, 0xfe, 0x60, 0x1f, 
  0x7f, 0xfc, 0x3f, 0xfe, 0x07, 0x80, 0xfc, 0x31, 0xfe, 0xff, 0xff, 0xbf, 0xd8, 0x0f, 0x80, 0xfc, 
  0x07, 0xfc, 0xff, 0x7f, 0xbf, 0xe0, 0x1f, 0x80, 0xfc, 0x0f, 0xf9, 0xff, 0x4e, 0x3e, 0xe0, 0x3f, 
  0x80, 0xfc, 0x1f, 0xe1, 0xff, 0x3b, 0xf6, 0xe0, 0xff, 0x80, 0xfe, 0x1f, 0xc1, 0xfc, 0x7f, 0xfc, 
  0xf1, 0xff, 0x80, 0xff, 0x00, 0x01, 0xfc, 0xf7, 0xfc, 0xf7, 0xff, 0x80, 0xff, 0x00, 0x01, 0xfb, 
  0xff, 0xfc, 0xf7, 0xff, 0x80, 0xff, 0x80, 0x00, 0xfb, 0xff, 0xf8, 0xf7, 0xff, 0x80, 0xff, 0x80, 
  0x20, 0x01, 0xff, 0x78, 0x07, 0xff, 0x80, 0xff, 0x80, 0x70, 0x00, 0x00, 0x38, 0x0f, 0xff, 0x80, 
  0xff, 0x76, 0x70, 0x00, 0x03, 0xfe, 0x3d, 0xff, 0x80, 0xff, 0x7f, 0xf0, 0x0f, 0x0f, 0xff, 0xfb, 
  0xff, 0x80, 0xff, 0xd3, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xdd, 0x1f, 0xff, 
  0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfb, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0x80
};
// 'sal5', 65x54px
const unsigned char epd_bitmap_sal5 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfa, 0x07, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xc0, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0x80, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x80, 0xff, 
  0xfc, 0x00, 0x00, 0xff, 0x70, 0x3f, 0xff, 0x80, 0xff, 0xf8, 0x00, 0x03, 0xfc, 0x00, 0x0f, 0xf9, 
  0x80, 0xff, 0xf0, 0x00, 0x07, 0xf0, 0x40, 0x07, 0xf5, 0x80, 0xff, 0xe0, 0x00, 0x0f, 0xc0, 0x20, 
  0x0f, 0xef, 0x80, 0xff, 0xc0, 0x00, 0x1f, 0x80, 0x10, 0x7f, 0x97, 0x80, 0xff, 0x80, 0x00, 0x3e, 
  0x00, 0x08, 0xfe, 0x0f, 0x80, 0xff, 0x00, 0x00, 0x3c, 0x00, 0x05, 0x00, 0x1f, 0x80, 0xff, 0x00, 
  0x00, 0x38, 0x00, 0x02, 0x00, 0x1f, 0x80, 0xfe, 0x00, 0x00, 0x70, 0x00, 0x01, 0x00, 0x0f, 0x80, 
  0xfe, 0x00, 0x00, 0x60, 0x00, 0x10, 0xc0, 0x07, 0x80, 0xfc, 0x00, 0x00, 0xc0, 0x00, 0x30, 0x28, 
  0x27, 0x80, 0xfc, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x7f, 0x37, 0x80, 0xf8, 0x00, 0x00, 0x80, 0x00, 
  0x01, 0x63, 0xfb, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x01, 0xf8, 0xc0, 0x75, 0x80, 0xf8, 0x00, 0x00, 
  0x00, 0x01, 0xe0, 0x80, 0x2f, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x03, 0xc1, 0x00, 0x1f, 0x80, 0xf8, 
  0x00, 0x00, 0x00, 0x07, 0xc2, 0x00, 0x0f, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xc2, 0x10, 0x0f, 
  0x80, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0e, 0x43, 0x80, 0xf8, 0x00, 0x00, 0x30, 0x0e, 0x00, 
  0x07, 0xe1, 0x80, 0xf8, 0x00, 0x00, 0x38, 0x0e, 0x00, 0x10, 0x79, 0x80, 0xf8, 0x00, 0x00, 0x18, 
  0x18, 0x00, 0x7f, 0xff, 0x80, 0xf8, 0x07, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0xf8, 0x1f, 
  0xfc, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 0xf8, 0x3f, 0xfe, 0x00, 0x00, 0x07, 0xff, 0xff, 0x80, 
  0xf8, 0x3f, 0xff, 0x03, 0x00, 0x07, 0xff, 0xff, 0x80, 0xfc, 0x7f, 0xff, 0x38, 0x00, 0x07, 0xff, 
  0xff, 0x80, 0xfc, 0x7f, 0xfe, 0xfc, 0x00, 0x0f, 0xff, 0xff, 0x80, 0xfe, 0x70, 0x17, 0xff, 0xfc, 
  0x1e, 0xff, 0xe3, 0x80, 0xff, 0x60, 0x0f, 0xff, 0xf8, 0x1f, 0xff, 0xe3, 0x80, 0xfe, 0x60, 0x1f, 
  0x7f, 0xfc, 0x3f, 0xfe, 0x07, 0x80, 0xfc, 0x31, 0xfe, 0xff, 0xff, 0xbf, 0xd8, 0x0f, 0x80, 0xfc, 
  0x07, 0xfc, 0xff, 0x7f, 0xbf, 0xe0, 0x1f, 0x80, 0xfc, 0x0f, 0xf9, 0xff, 0x4e, 0x3e, 0xe0, 0x3f, 
  0x80, 0xfc, 0x1f, 0xe1, 0xff, 0x3b, 0xf6, 0xe0, 0xff, 0x80, 0xfe, 0x1f, 0xc1, 0xfc, 0x7f, 0xfc, 
  0xf1, 0xff, 0x80, 0xff, 0x00, 0x01, 0xfc, 0xf7, 0xfc, 0xf7, 0xff, 0x80, 0xff, 0x00, 0x01, 0xfb, 
  0xff, 0xfc, 0xf7, 0xff, 0x80, 0xff, 0x80, 0x00, 0xfb, 0xff, 0xf8, 0xf7, 0xff, 0x80, 0xff, 0x80, 
  0x20, 0x01, 0xff, 0x78, 0x07, 0xff, 0x80, 0xff, 0x80, 0x70, 0x00, 0x00, 0x38, 0x0f, 0xff, 0x80, 
  0xff, 0x76, 0x70, 0x00, 0x03, 0xfe, 0x3d, 0xff, 0x80, 0xff, 0x7f, 0xf0, 0x0f, 0x0f, 0xff, 0xfb, 
  0xff, 0x80, 0xff, 0xd3, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xdd, 0x1f, 0xff, 
  0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfb, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0x80
};

// 'pig1', 43x48px
const unsigned char epd_bitmap_pig1 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0xf8, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xe0, 0xff, 0xff, 0xff, 0x00, 
  0x7f, 0xe0, 0xff, 0xff, 0xfe, 0xc0, 0x2f, 0xe0, 0xff, 0xff, 0xfe, 0x20, 0x17, 0xe0, 0xff, 0xff, 
  0xfd, 0xfc, 0x17, 0xe0, 0xff, 0xff, 0xfc, 0x3f, 0x0b, 0xe0, 0xff, 0xff, 0xfe, 0x0f, 0x0b, 0xe0, 
  0xff, 0xff, 0xfe, 0x00, 0x87, 0xe0, 0xff, 0xff, 0xfc, 0x0a, 0x1f, 0xe0, 0xff, 0xff, 0xfc, 0x08, 
  0x0b, 0xe0, 0xff, 0xff, 0xf8, 0x0e, 0x05, 0xe0, 0xff, 0xff, 0xf0, 0x1f, 0x01, 0xe0, 0xff, 0xff, 
  0x80, 0x3e, 0x01, 0xe0, 0xff, 0xff, 0x00, 0x1f, 0x07, 0xe0, 0xff, 0xfe, 0x00, 0x1f, 0x0f, 0xe0, 
  0xff, 0xfc, 0x00, 0x0f, 0x1f, 0xe0, 0xff, 0xf8, 0x00, 0x0f, 0x9f, 0xe0, 0xff, 0x70, 0x00, 0x3f, 
  0xdf, 0xe0, 0xe4, 0x30, 0x00, 0x0f, 0xdf, 0xe0, 0xc0, 0x00, 0x00, 0x1f, 0xf7, 0xe0, 0xc0, 0x04, 
  0x00, 0x1f, 0xf7, 0xe0, 0x80, 0x04, 0x00, 0x1f, 0xd7, 0xe0, 0x80, 0x06, 0x00, 0x1e, 0xd7, 0xe0, 
  0xc0, 0x07, 0x80, 0x1e, 0xd7, 0xe0, 0xe0, 0x07, 0x80, 0x1f, 0xcf, 0xe0, 0xc0, 0x07, 0xc0, 0x76, 
  0x0f, 0xe0, 0xfc, 0x65, 0xf8, 0xf8, 0xdf, 0xe0, 0xff, 0xeb, 0xfb, 0xfe, 0xff, 0xe0, 0xff, 0xeb, 
  0x73, 0xfd, 0xff, 0xe0, 0xff, 0xf3, 0x0f, 0xe3, 0xff, 0xe0, 0xff, 0xfa, 0xb9, 0x1f, 0xff, 0xe0, 
  0xff, 0xfc, 0x42, 0x1f, 0xff, 0xe0, 0xff, 0xff, 0xc3, 0x01, 0xff, 0xe0, 0xff, 0xff, 0x80, 0x0a, 
  0xff, 0xe0, 0xff, 0xff, 0x40, 0x85, 0x7f, 0xe0, 0xff, 0xff, 0x03, 0x50, 0xff, 0xe0, 0xff, 0xff, 
  0xf1, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0
};
// 'pig2', 43x48px
const unsigned char epd_bitmap_pig2 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0xfe, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xf2, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xd0, 
  0x7f, 0xe0, 0xff, 0xff, 0xff, 0x20, 0x1f, 0xe0, 0xff, 0xff, 0xfe, 0x10, 0x0f, 0xe0, 0xff, 0xff, 
  0xff, 0xfc, 0x0b, 0xe0, 0xff, 0xff, 0xff, 0x1e, 0x0b, 0xe0, 0xff, 0xff, 0xff, 0x07, 0x0b, 0xe0, 
  0xff, 0xff, 0xff, 0x07, 0x07, 0xe0, 0xff, 0xff, 0xfc, 0x00, 0xcb, 0xe0, 0xff, 0xff, 0xf8, 0x0b, 
  0x03, 0xe0, 0xff, 0xff, 0xf8, 0x08, 0x1b, 0xe0, 0xff, 0xff, 0xe0, 0x1e, 0x0b, 0xe0, 0xff, 0xff, 
  0x00, 0x3f, 0x05, 0xe0, 0xff, 0xfe, 0x00, 0x1e, 0x01, 0xe0, 0xff, 0xfc, 0x00, 0x1f, 0x03, 0xe0, 
  0xff, 0xf8, 0x00, 0x1f, 0x07, 0xe0, 0xf9, 0x10, 0x00, 0x1e, 0x1f, 0xe0, 0xe0, 0x00, 0x00, 0x3f, 
  0x1f, 0xe0, 0xc0, 0x04, 0x00, 0x1f, 0xdf, 0xe0, 0xc0, 0x04, 0x00, 0x1f, 0xef, 0xe0, 0xe0, 0x06, 
  0x00, 0x1f, 0xef, 0xe0, 0xf0, 0x0f, 0x00, 0x1f, 0xaf, 0xe0, 0xe0, 0x0f, 0x00, 0x3d, 0xaf, 0xe0, 
  0xe0, 0x0f, 0x00, 0x3d, 0xaf, 0xe0, 0xfc, 0x0b, 0x80, 0x5b, 0x9f, 0xe0, 0xff, 0xd7, 0xf0, 0xe4, 
  0x3f, 0xe0, 0xff, 0xd6, 0xf1, 0xfd, 0x7f, 0xe0, 0xff, 0xcd, 0xcf, 0xfd, 0xff, 0xe0, 0xff, 0xea, 
  0x3f, 0xf3, 0xff, 0xe0, 0xff, 0xf0, 0x6f, 0xe7, 0xff, 0xe0, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xe0, 
  0xff, 0xff, 0xc3, 0x1f, 0xff, 0xe0, 0xff, 0xff, 0xc3, 0x01, 0xff, 0xe0, 0xff, 0xff, 0x80, 0x0a, 
  0xff, 0xe0, 0xff, 0xff, 0x40, 0x85, 0x7f, 0xe0, 0xff, 0xff, 0x03, 0x50, 0xff, 0xe0, 0xff, 0xff, 
  0xf1, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0
};
// 'pig3', 43x48px
const unsigned char epd_bitmap_pig3 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0xfe, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xf2, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xd0, 
  0x7f, 0xe0, 0xff, 0xff, 0xff, 0x20, 0x1f, 0xe0, 0xff, 0xff, 0xfe, 0x10, 0x0f, 0xe0, 0xff, 0xff, 
  0xff, 0xfc, 0x0b, 0xe0, 0xff, 0xff, 0xff, 0x1e, 0x0b, 0xe0, 0xff, 0xff, 0xff, 0x07, 0x0b, 0xe0, 
  0xff, 0xff, 0xff, 0x07, 0x07, 0xe0, 0xff, 0xff, 0xfc, 0x00, 0xcb, 0xe0, 0xff, 0xff, 0xf8, 0x0b, 
  0x03, 0xe0, 0xff, 0xff, 0xf8, 0x08, 0x1b, 0xe0, 0xff, 0xff, 0xe0, 0x1e, 0x0b, 0xe0, 0xff, 0xff, 
  0x00, 0x3f, 0x05, 0xe0, 0xff, 0xfe, 0x00, 0x1e, 0x01, 0xe0, 0xff, 0xfc, 0x00, 0x1f, 0x03, 0xe0, 
  0xff, 0xf8, 0x00, 0x1f, 0x07, 0xe0, 0xf9, 0x10, 0x00, 0x1e, 0x1f, 0xe0, 0xe0, 0x00, 0x00, 0x3f, 
  0x1f, 0xe0, 0xc0, 0x04, 0x00, 0x1f, 0xdf, 0xe0, 0xc0, 0x04, 0x00, 0x1f, 0xef, 0xe0, 0xe0, 0x06, 
  0x00, 0x1f, 0xef, 0xe0, 0xf0, 0x0f, 0x00, 0x1f, 0xaf, 0xe0, 0xe0, 0x0f, 0x00, 0x3d, 0xaf, 0xe0, 
  0xe0, 0x0f, 0x00, 0x3d, 0xaf, 0xe0, 0xfc, 0x0b, 0x80, 0x5b, 0x9f, 0xe0, 0xff, 0xd7, 0xf0, 0xe4, 
  0x3f, 0xe0, 0xff, 0xd6, 0xf1, 0xfd, 0x7f, 0xe0, 0xff, 0xcd, 0xcf, 0xfd, 0xff, 0xe0, 0xff, 0xea, 
  0x3f, 0xf3, 0xff, 0xe0, 0xff, 0xf0, 0x6f, 0xe7, 0xff, 0xe0, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xe0, 
  0xff, 0xff, 0xc3, 0x1f, 0xff, 0xe0, 0xff, 0xff, 0xc3, 0x01, 0xff, 0xe0, 0xff, 0xff, 0x80, 0x0a, 
  0xff, 0xe0, 0xff, 0xff, 0x40, 0x85, 0x7f, 0xe0, 0xff, 0xff, 0x03, 0x50, 0xff, 0xe0, 0xff, 0xff, 
  0xf1, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0
};
// 'pig4', 43x48px
const unsigned char epd_bitmap_pig4 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0xfe, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xf2, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xd0, 
  0x7f, 0xe0, 0xff, 0xff, 0xff, 0x20, 0x1f, 0xe0, 0xff, 0xff, 0xfe, 0x10, 0x0f, 0xe0, 0xff, 0xff, 
  0xff, 0xfc, 0x0b, 0xe0, 0xff, 0xff, 0xff, 0x1e, 0x0b, 0xe0, 0xff, 0xff, 0xff, 0x07, 0x0b, 0xe0, 
  0xff, 0xff, 0xff, 0x07, 0x07, 0xe0, 0xff, 0xff, 0xfc, 0x00, 0xcb, 0xe0, 0xff, 0xff, 0xf8, 0x0b, 
  0x03, 0xe0, 0xff, 0xff, 0xf8, 0x08, 0x1b, 0xe0, 0xff, 0xff, 0xe0, 0x1e, 0x0b, 0xe0, 0xff, 0xff, 
  0x00, 0x3f, 0x05, 0xe0, 0xff, 0xfe, 0x00, 0x1e, 0x01, 0xe0, 0xff, 0xfc, 0x00, 0x1f, 0x03, 0xe0, 
  0xff, 0xf8, 0x00, 0x1f, 0x07, 0xe0, 0xf9, 0x10, 0x00, 0x1e, 0x1f, 0xe0, 0xe0, 0x00, 0x00, 0x3f, 
  0x1f, 0xe0, 0xc0, 0x04, 0x00, 0x1f, 0xdf, 0xe0, 0xc0, 0x04, 0x00, 0x1f, 0xef, 0xe0, 0xe0, 0x06, 
  0x00, 0x1f, 0xef, 0xe0, 0xf0, 0x0f, 0x00, 0x1f, 0xaf, 0xe0, 0xe0, 0x0f, 0x00, 0x3d, 0xaf, 0xe0, 
  0xe0, 0x0f, 0x00, 0x3d, 0xaf, 0xe0, 0xfc, 0x0b, 0x80, 0x5b, 0x9f, 0xe0, 0xff, 0xd7, 0xf0, 0xe4, 
  0x3f, 0xe0, 0xff, 0xd6, 0xf1, 0xfd, 0x7f, 0xe0, 0xff, 0xcd, 0xcf, 0xfd, 0xff, 0xe0, 0xff, 0xea, 
  0x3f, 0xf3, 0xff, 0xe0, 0xff, 0xf0, 0x6f, 0xe7, 0xff, 0xe0, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xe0, 
  0xff, 0xff, 0xc3, 0x1f, 0xff, 0xe0, 0xff, 0xff, 0xc3, 0x01, 0xff, 0xe0, 0xff, 0xff, 0x80, 0x0a, 
  0xff, 0xe0, 0xff, 0xff, 0x40, 0x85, 0x7f, 0xe0, 0xff, 0xff, 0x03, 0x50, 0xff, 0xe0, 0xff, 0xff, 
  0xf1, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0
};
// 'pig5', 43x48px
const unsigned char epd_bitmap_pig5 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0xfe, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xf2, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xd0, 
  0x7f, 0xe0, 0xff, 0xff, 0xff, 0x20, 0x1f, 0xe0, 0xff, 0xff, 0xfe, 0x10, 0x0f, 0xe0, 0xff, 0xff, 
  0xff, 0xfc, 0x0b, 0xe0, 0xff, 0xff, 0xff, 0x1e, 0x0b, 0xe0, 0xff, 0xff, 0xff, 0x07, 0x0b, 0xe0, 
  0xff, 0xff, 0xff, 0x07, 0x07, 0xe0, 0xff, 0xff, 0xfc, 0x00, 0xcb, 0xe0, 0xff, 0xff, 0xf8, 0x0b, 
  0x03, 0xe0, 0xff, 0xff, 0xf8, 0x08, 0x1b, 0xe0, 0xff, 0xff, 0xe0, 0x1e, 0x0b, 0xe0, 0xff, 0xff, 
  0x00, 0x3f, 0x05, 0xe0, 0xff, 0xfe, 0x00, 0x1e, 0x01, 0xe0, 0xff, 0xfc, 0x00, 0x1f, 0x03, 0xe0, 
  0xff, 0xf8, 0x00, 0x1f, 0x07, 0xe0, 0xf9, 0x10, 0x00, 0x1e, 0x1f, 0xe0, 0xe0, 0x00, 0x00, 0x3f, 
  0x1f, 0xe0, 0xc0, 0x04, 0x00, 0x1f, 0xdf, 0xe0, 0xc0, 0x04, 0x00, 0x1f, 0xef, 0xe0, 0xe0, 0x06, 
  0x00, 0x1f, 0xef, 0xe0, 0xf0, 0x0f, 0x00, 0x1f, 0xaf, 0xe0, 0xe0, 0x0f, 0x00, 0x3d, 0xaf, 0xe0, 
  0xe0, 0x0f, 0x00, 0x3d, 0xaf, 0xe0, 0xfc, 0x0b, 0x80, 0x5b, 0x9f, 0xe0, 0xff, 0xd7, 0xf0, 0xe4, 
  0x3f, 0xe0, 0xff, 0xd6, 0xf1, 0xfd, 0x7f, 0xe0, 0xff, 0xcd, 0xcf, 0xfd, 0xff, 0xe0, 0xff, 0xea, 
  0x3f, 0xf3, 0xff, 0xe0, 0xff, 0xf0, 0x6f, 0xe7, 0xff, 0xe0, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xe0, 
  0xff, 0xff, 0xc3, 0x1f, 0xff, 0xe0, 0xff, 0xff, 0xc3, 0x01, 0xff, 0xe0, 0xff, 0xff, 0x80, 0x0a, 
  0xff, 0xe0, 0xff, 0xff, 0x40, 0x85, 0x7f, 0xe0, 0xff, 0xff, 0x03, 0x50, 0xff, 0xe0, 0xff, 0xff, 
  0xf1, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0
};


// 'gen1', 66x54px
const unsigned char epd_bitmap_gen1 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 
  0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xe0, 
  0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x80, 0xff, 0xff, 0xc0, 0xff, 0xfb, 0xfd, 0xbc, 
  0x36, 0x00, 0xff, 0xff, 0xc0, 0xff, 0xf0, 0x7c, 0x98, 0x20, 0x00, 0xff, 0xff, 0xc0, 0xff, 0xf0, 
  0x0c, 0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 
  0xff, 0xf8, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x03, 0xff, 
  0xff, 0xc0, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0xff, 0xff, 0x00, 0x00, 0x00, 
  0x03, 0xff, 0xff, 0xc0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x03, 0xf3, 0xff, 0xc0, 0xff, 0xff, 0x80, 
  0x00, 0x00, 0x07, 0xc1, 0xff, 0xc0, 0xff, 0xc3, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0xff, 
  0x80, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
  0xc0, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 
  0x03, 0xff, 0xc0, 0xff, 0x80, 0x00, 0x00, 0x40, 0x00, 0x03, 0xff, 0xc0, 0xff, 0xe0, 0x00, 0x00, 
  0x60, 0x00, 0x07, 0xff, 0xc0, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xf8, 
  0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x0e, 0x00, 0x3f, 0xff, 0xc0, 
  0xff, 0xff, 0x00, 0x00, 0x3c, 0x00, 0x3f, 0xff, 0xc0, 0xff, 0xff, 0x84, 0x01, 0xf8, 0x00, 0x3f, 
  0xff, 0xc0, 0xff, 0xff, 0x87, 0xbb, 0xf8, 0x00, 0x3f, 0xff, 0xc0, 0xff, 0xff, 0xc3, 0xbf, 0xd0, 
  0x00, 0x3f, 0xff, 0xc0, 0xff, 0xff, 0xc3, 0xff, 0xc0, 0x00, 0x3f, 0xff, 0xc0, 0xff, 0xff, 0xc0, 
  0xdd, 0x80, 0x00, 0x3f, 0xff, 0xc0, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0xff, 
  0xff, 0xe0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xff, 
  0xc0, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 
  0x07, 0xff, 0xc0, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xc0, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xff, 0xff, 
  0xf0, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xf0, 0x04, 0x08, 0x00, 0xff, 0xff, 0xc0, 
  0xff, 0xff, 0xf8, 0x0f, 0xfc, 0x00, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xf0, 0x0f, 0xfc, 0x00, 0xff, 
  0xff, 0xc0, 0xff, 0xff, 0xf0, 0x1f, 0xfe, 0x00, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xf8, 0x7f, 0xff, 
  0x00, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe3, 0xff, 0xff, 0xc0
};
// 'gen2', 66x54px
const unsigned char epd_bitmap_gen2 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xc0, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xc0, 0x7f, 0xff, 
  0xc0, 0xff, 0xff, 0xff, 0xff, 0x8f, 0x80, 0x7f, 0xff, 0xc0, 0xff, 0xf9, 0xfe, 0x6f, 0x8e, 0x00, 
  0xff, 0xff, 0xc0, 0xff, 0xf8, 0x3e, 0x06, 0x08, 0x00, 0xff, 0xff, 0xc0, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xff, 0xfc, 
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 
  0xff, 0xff, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x01, 0xf9, 
  0xff, 0xc0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x03, 0xe1, 0xff, 0xc0, 0xff, 0xeb, 0xc0, 0x00, 0x00, 
  0x03, 0x80, 0x3f, 0xc0, 0xff, 0xc1, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0xff, 0xc0, 0x60, 
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 
  0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
  0xc0, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 0xff, 0xf0, 0x01, 0x00, 0x10, 0x00, 
  0x07, 0xff, 0xc0, 0xff, 0xf8, 0x00, 0x00, 0x10, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 
  0x02, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xfe, 0x00, 0x00, 0x0e, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 
  0x80, 0x00, 0x1e, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xc7, 0xdd, 0xfc, 0x00, 0x0f, 0xff, 0xc0, 
  0xff, 0xff, 0xc1, 0xfd, 0xf8, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xc1, 0xff, 0xe0, 0x00, 0x1f, 
  0xff, 0xc0, 0xff, 0xff, 0xc0, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0xc0, 0xff, 0xff, 0xe0, 0x3e, 0x80, 
  0x00, 0x1f, 0xff, 0xc0, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xf0, 
  0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0xff, 
  0xff, 0xf8, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 
  0xc0, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 
  0x3f, 0xff, 0xc0, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0xff, 0xff, 0xf8, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xc0, 0xff, 0xff, 0xf8, 0x02, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0xff, 0xff, 
  0xf8, 0x02, 0x0f, 0x00, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xf8, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xc0, 
  0xff, 0xff, 0xfc, 0x0f, 0xff, 0xe1, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc0
};
// 'gen3', 66x54px
const unsigned char epd_bitmap_gen3 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 
  0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xfb, 
  0xf0, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xf0, 0x1f, 0xff, 0xc0, 0xff, 0xff, 0x3f, 
  0xc9, 0xe3, 0xc0, 0x1f, 0xff, 0xc0, 0xff, 0xfe, 0x0f, 0xc8, 0x83, 0x00, 0x1f, 0xff, 0xc0, 0xff, 
  0xff, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x3f, 0xff, 
  0xc0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 
  0x7f, 0xff, 0xc0, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x00, 0x7f, 0x7f, 0xc0, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x7c, 0x3f, 0xc0, 0xff, 0xfb, 
  0x78, 0x00, 0x00, 0x00, 0x70, 0x0f, 0xc0, 0xff, 0xf8, 0x38, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 
  0xff, 0xf8, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1f, 0xc0, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0xff, 0xf0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xc0, 0xff, 0xf8, 0x00, 0x00, 0x04, 0x00, 0x00, 0x7f, 0xc0, 0xff, 0xfc, 0x00, 
  0x00, 0x06, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xff, 0x00, 0x00, 0x04, 0x00, 0x01, 0xff, 0xc0, 0xff, 
  0xff, 0x80, 0x00, 0x00, 0x40, 0x03, 0xff, 0xc0, 0xff, 0xff, 0xc0, 0x00, 0x01, 0x80, 0x03, 0xff, 
  0xc0, 0xff, 0xff, 0xe0, 0x00, 0x07, 0x80, 0x03, 0xff, 0xc0, 0xff, 0xff, 0xf0, 0xb7, 0x3f, 0x00, 
  0x03, 0xff, 0xc0, 0xff, 0xff, 0xf8, 0xbf, 0xff, 0x00, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xf8, 0x3f, 
  0xfc, 0x00, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xfc, 0x3f, 0xf8, 0x00, 0x07, 0xff, 0xc0, 0xff, 0xff, 
  0xfc, 0x0b, 0xe0, 0x00, 0x03, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 
  0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 
  0x3f, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0xff, 0xff, 0xfe, 
  0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0xff, 
  0xff, 0xfe, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x00, 0x80, 0x30, 0x3f, 0xff, 
  0xc0, 0xff, 0xff, 0xfc, 0x00, 0xf3, 0xfc, 0x7f, 0xff, 0xc0, 0xff, 0xff, 0xfc, 0x01, 0xff, 0xff, 
  0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x17, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc0
};
// 'gen4', 66x54px
const unsigned char epd_bitmap_gen4 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xc0, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0x83, 0xff, 
  0xc0, 0xff, 0xff, 0xff, 0xf7, 0xfc, 0xfc, 0x03, 0xff, 0xc0, 0xff, 0xff, 0xcf, 0xf6, 0x78, 0xe0, 
  0x07, 0xff, 0xc0, 0xff, 0xff, 0xc1, 0xf2, 0x20, 0xc0, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xc0, 0x70, 
  0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 
  0xe0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 
  0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x0f, 
  0xff, 0xc0, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x1f, 0xcf, 0xc0, 0xff, 0xff, 0xae, 0x00, 0x00, 
  0x00, 0x1f, 0x0f, 0xc0, 0xff, 0xfe, 0x0e, 0x00, 0x00, 0x00, 0x1c, 0x03, 0xc0, 0xff, 0xfe, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0xff, 
  0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xc0, 0xff, 0xfe, 0x00, 0x10, 0x01, 0x00, 0x00, 0x0f, 0xc0, 0xff, 0xff, 0x80, 0x00, 0x01, 0x00, 
  0x00, 0x1f, 0xc0, 0xff, 0xff, 0xc0, 0x00, 0x01, 0x00, 0x00, 0x3f, 0xc0, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x30, 0x00, 0x7f, 0xc0, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xe0, 0x00, 0xff, 0xc0, 0xff, 0xff, 
  0xfc, 0x00, 0x01, 0xe0, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x2d, 0xdf, 0xc0, 0x00, 0xff, 0xc0, 
  0xff, 0xff, 0xfe, 0x3d, 0xdf, 0xc0, 0x01, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x1f, 0xfe, 0x00, 0x01, 
  0xff, 0xc0, 0xff, 0xff, 0xfe, 0x0f, 0xee, 0x00, 0x01, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x02, 0xe8, 
  0x00, 0x01, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0xff, 
  0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x7f, 
  0xc0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 
  0x03, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x00, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x30, 0x07, 0xff, 0xc0, 0xff, 0xff, 
  0xfe, 0x00, 0x79, 0xf8, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x81, 0xff, 0xfc, 0x0f, 0xff, 0xc0, 
  0xff, 0xff, 0xff, 0xfb, 0xff, 0xfe, 0x1f, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc0
};
// 'gen5', 66x54px
const unsigned char epd_bitmap_gen5 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xc0, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0x83, 0xff, 
  0xc0, 0xff, 0xff, 0xff, 0xf7, 0xfc, 0xfc, 0x03, 0xff, 0xc0, 0xff, 0xff, 0xcf, 0xf6, 0x78, 0xe0, 
  0x07, 0xff, 0xc0, 0xff, 0xff, 0xc1, 0xf2, 0x20, 0xc0, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xc0, 0x70, 
  0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 
  0xe0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 
  0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x0f, 
  0xff, 0xc0, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x1f, 0xcf, 0xc0, 0xff, 0xff, 0xae, 0x00, 0x00, 
  0x00, 0x1f, 0x0f, 0xc0, 0xff, 0xfe, 0x0e, 0x00, 0x00, 0x00, 0x1c, 0x03, 0xc0, 0xff, 0xfe, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0xff, 
  0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xc0, 0xff, 0xfe, 0x00, 0x10, 0x01, 0x00, 0x00, 0x0f, 0xc0, 0xff, 0xff, 0x80, 0x00, 0x01, 0x00, 
  0x00, 0x1f, 0xc0, 0xff, 0xff, 0xc0, 0x00, 0x01, 0x00, 0x00, 0x3f, 0xc0, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x30, 0x00, 0x7f, 0xc0, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xe0, 0x00, 0xff, 0xc0, 0xff, 0xff, 
  0xfc, 0x00, 0x01, 0xe0, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x2d, 0xdf, 0xc0, 0x00, 0xff, 0xc0, 
  0xff, 0xff, 0xfe, 0x3d, 0xdf, 0xc0, 0x01, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x1f, 0xfe, 0x00, 0x01, 
  0xff, 0xc0, 0xff, 0xff, 0xfe, 0x0f, 0xee, 0x00, 0x01, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x02, 0xe8, 
  0x00, 0x01, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0xff, 
  0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x7f, 
  0xc0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 
  0x03, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x00, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x30, 0x07, 0xff, 0xc0, 0xff, 0xff, 
  0xfe, 0x00, 0x79, 0xf8, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x81, 0xff, 0xfc, 0x0f, 0xff, 0xc0, 
  0xff, 0xff, 0xff, 0xfb, 0xff, 0xfe, 0x1f, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc0
};


// 'char1', 53x54px
const unsigned char epd_bitmap_char1 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 
  0xf8, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xf8, 0xff, 
  0xff, 0xff, 0xff, 0x27, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xdf, 0x73, 0xff, 0xf8, 0xff, 0xff, 0xff, 
  0x8f, 0xb8, 0x7f, 0xf8, 0xff, 0xff, 0xc3, 0x0f, 0xb8, 0x3f, 0xf8, 0xff, 0xff, 0x00, 0x1c, 0xfa, 
  0x07, 0xf8, 0xff, 0xfc, 0x00, 0x1d, 0xf7, 0x01, 0xf8, 0xff, 0xf4, 0x00, 0x3c, 0xe7, 0x00, 0xf8, 
  0xff, 0xf0, 0x00, 0x3f, 0xff, 0x00, 0x78, 0xff, 0xf0, 0x00, 0x3f, 0x0e, 0x00, 0x38, 0xff, 0xe0, 
  0x00, 0x3f, 0x1e, 0x00, 0x18, 0xff, 0xe0, 0x00, 0x1e, 0x3e, 0x00, 0x18, 0xff, 0xe0, 0x00, 0x1c, 
  0x3e, 0x00, 0x18, 0xff, 0xc0, 0x00, 0x10, 0x7c, 0x00, 0x08, 0xff, 0xc0, 0x00, 0x00, 0xf8, 0x00, 
  0x00, 0xff, 0x80, 0x00, 0x01, 0xf0, 0x00, 0x00, 0xff, 0x80, 0x00, 0x01, 0xe0, 0x40, 0x00, 0xff, 
  0x81, 0x00, 0x01, 0xc0, 0x60, 0x00, 0xff, 0x83, 0x80, 0x00, 0x00, 0x40, 0x08, 0xff, 0x87, 0x81, 
  0x00, 0x00, 0x00, 0x08, 0xff, 0x87, 0x03, 0x80, 0x00, 0x00, 0x18, 0xff, 0x8e, 0x07, 0xc0, 0x00, 
  0x04, 0x08, 0xff, 0x8c, 0x0f, 0x80, 0x01, 0x04, 0x18, 0xff, 0xcc, 0x0c, 0x00, 0x00, 0x00, 0x38, 
  0xff, 0xc8, 0x18, 0x00, 0x00, 0x00, 0x18, 0xff, 0xf8, 0x18, 0x00, 0x00, 0x00, 0x18, 0xff, 0xf0, 
  0x38, 0x00, 0x38, 0x06, 0x08, 0xff, 0xf0, 0x10, 0x00, 0xfe, 0x82, 0x08, 0xff, 0xe0, 0x10, 0x01, 
  0xfe, 0xc0, 0xb8, 0xff, 0xe0, 0x00, 0x03, 0xfe, 0xc0, 0x78, 0xff, 0xe0, 0x00, 0x07, 0xff, 0xc0, 
  0x78, 0xff, 0xf0, 0x00, 0x07, 0xff, 0x68, 0xf8, 0xff, 0xf0, 0x00, 0x0f, 0xff, 0x3b, 0xf8, 0xff, 
  0xf8, 0x00, 0x0f, 0xfe, 0x1f, 0xf8, 0xff, 0xfc, 0x00, 0x0f, 0xfe, 0x1f, 0xf8, 0xff, 0xfc, 0x00, 
  0x0f, 0xfc, 0x0f, 0xf8, 0xff, 0xfe, 0xc0, 0x0f, 0xf8, 0x0f, 0xf8, 0xff, 0xff, 0x80, 0x0f, 0xf0, 
  0x0f, 0xf8, 0xff, 0xff, 0xc0, 0x07, 0xd0, 0x0f, 0xf8, 0xff, 0xff, 0xc0, 0x01, 0x30, 0x0f, 0xf8, 
  0xff, 0xff, 0xc0, 0x00, 0xf8, 0x1f, 0xf8, 0xff, 0xff, 0x80, 0x7f, 0xf0, 0x3f, 0xf8, 0xff, 0xff, 
  0xc0, 0xff, 0xf0, 0x7f, 0xf8, 0xff, 0xff, 0xe0, 0xff, 0xf9, 0xbf, 0xf8, 0xff, 0xff, 0xb6, 0xff, 
  0xff, 0xff, 0xf8, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xf8
};
// 'char2', 53x54px
const unsigned char epd_bitmap_char2 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xf7, 
  0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 
  0xf8, 0xff, 0xff, 0xff, 0xa3, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xb1, 0xff, 0xff, 0xf8, 0xff, 
  0xff, 0xff, 0xbd, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0x9d, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xfe, 
  0x6d, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xfe, 0xe3, 0xf9, 0xff, 0xf8, 0xff, 0xff, 0xe0, 0x03, 0xf8, 
  0xff, 0xf8, 0xff, 0xff, 0x80, 0x07, 0xfc, 0xdf, 0xf8, 0xff, 0xfe, 0x00, 0x07, 0xfe, 0x07, 0xf8, 
  0xff, 0xfc, 0x00, 0x07, 0xfe, 0x03, 0xf8, 0xff, 0xfc, 0x00, 0x0f, 0xfe, 0x00, 0xf8, 0xff, 0xfc, 
  0x00, 0x0f, 0xfc, 0x00, 0xf8, 0xff, 0xf8, 0x00, 0x1f, 0xfc, 0x00, 0xf8, 0xff, 0xf8, 0x00, 0x1f, 
  0xfc, 0x00, 0x78, 0xff, 0xf0, 0x00, 0x1f, 0xfc, 0x00, 0x38, 0xff, 0xf0, 0x00, 0x0f, 0xfc, 0x00, 
  0x18, 0xff, 0xe0, 0x00, 0x0f, 0xf8, 0x00, 0x18, 0xff, 0xe0, 0x00, 0x0f, 0xf0, 0x00, 0x18, 0xff, 
  0xe0, 0x00, 0x03, 0xe0, 0x00, 0x18, 0xff, 0xe0, 0x00, 0x03, 0xc0, 0xc0, 0x18, 0xff, 0xe0, 0x00, 
  0x01, 0x00, 0x40, 0x38, 0xff, 0xe0, 0x0f, 0x00, 0x00, 0x00, 0x38, 0xff, 0xc0, 0x1f, 0x80, 0x00, 
  0x00, 0x18, 0xff, 0xe0, 0x3f, 0xc0, 0x00, 0x00, 0x08, 0xff, 0xe0, 0x3f, 0x80, 0x03, 0x04, 0x18, 
  0xff, 0xe0, 0x78, 0x00, 0x00, 0x00, 0x38, 0xff, 0xf0, 0x70, 0x00, 0x00, 0x00, 0x18, 0xff, 0xf0, 
  0x70, 0x00, 0x00, 0x00, 0x18, 0xff, 0xe0, 0x61, 0x00, 0x19, 0x80, 0x08, 0xff, 0xe0, 0x60, 0x00, 
  0x3d, 0xc0, 0x08, 0xff, 0xe0, 0x20, 0x00, 0xfe, 0xe0, 0x18, 0xff, 0xe0, 0x00, 0x03, 0xfe, 0xe0, 
  0x78, 0xff, 0xe0, 0x00, 0x07, 0xff, 0xf4, 0xf8, 0xff, 0xe0, 0x00, 0x07, 0xff, 0x7f, 0xf8, 0xff, 
  0xe0, 0x00, 0x0f, 0xff, 0x3f, 0xf8, 0xff, 0xe0, 0x00, 0x0f, 0xfe, 0x1f, 0xf8, 0xff, 0xf0, 0x00, 
  0x0f, 0xfe, 0x1f, 0xf8, 0xff, 0xf8, 0x00, 0x0f, 0xfc, 0x0f, 0xf8, 0xff, 0xfe, 0x00, 0x0f, 0xf8, 
  0x0f, 0xf8, 0xff, 0xff, 0x80, 0x07, 0xf0, 0x0f, 0xf8, 0xff, 0xff, 0xc0, 0x0f, 0xe0, 0x0f, 0xf8, 
  0xff, 0xff, 0xc0, 0x03, 0x10, 0x1f, 0xf8, 0xff, 0xff, 0xc0, 0x10, 0xf0, 0x3f, 0xf8, 0xff, 0xff, 
  0xc0, 0x63, 0xf0, 0x7f, 0xf8, 0xff, 0xff, 0xe0, 0xff, 0xf9, 0xbf, 0xf8, 0xff, 0xff, 0xb6, 0xff, 
  0xff, 0xff, 0xf8, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xf8
};
// 'char3', 53x54px
const unsigned char epd_bitmap_char3 [] PROGMEM = {
  0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xe3, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xf8, 0xe9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xfc, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xf8, 0xee, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xe6, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xf8, 0x3e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xb9, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xfd, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xf8, 0xf3, 0xff, 0xff, 
  0x8f, 0xfe, 0x7f, 0xf8, 0xe3, 0xff, 0xc3, 0x0f, 0xfe, 0x3f, 0xf8, 0xf9, 0xff, 0x00, 0x1f, 0xfe, 
  0x07, 0xf8, 0xf8, 0xfc, 0x00, 0x1f, 0xff, 0x01, 0xf8, 0xf8, 0xf4, 0x00, 0x3f, 0xff, 0x00, 0xf8, 
  0xfc, 0x70, 0x00, 0x3f, 0xff, 0x00, 0x78, 0xfc, 0x70, 0x00, 0x3f, 0xfe, 0x00, 0x38, 0xfc, 0x60, 
  0x00, 0x3f, 0xfe, 0x00, 0x18, 0xfc, 0x60, 0x00, 0x1f, 0xfe, 0x00, 0x18, 0xfc, 0x60, 0x00, 0x1f, 
  0xfe, 0x00, 0x18, 0xfc, 0x40, 0x00, 0x1f, 0xfc, 0x00, 0x08, 0xfc, 0x00, 0x00, 0x0f, 0xf8, 0x00, 
  0x00, 0xfc, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x01, 0xe0, 0x40, 0x00, 0xfc, 
  0x01, 0x00, 0x01, 0xc0, 0x60, 0x00, 0xfc, 0x03, 0x80, 0x00, 0x00, 0x40, 0x08, 0xfc, 0x07, 0xcf, 
  0x00, 0x00, 0x00, 0x08, 0xfc, 0x07, 0xff, 0x80, 0x00, 0x00, 0x18, 0xfc, 0x0f, 0xff, 0xc0, 0x00, 
  0x04, 0x08, 0xfc, 0x0f, 0xff, 0x80, 0x01, 0x04, 0x18, 0xfe, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x38, 
  0xfe, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x18, 0xfe, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x18, 0xfe, 0x07, 
  0xf8, 0x00, 0x38, 0x06, 0x08, 0xff, 0x07, 0xf0, 0x00, 0xfe, 0x82, 0x08, 0xff, 0x00, 0x70, 0x01, 
  0xfe, 0xc0, 0xb8, 0xff, 0x00, 0x30, 0x03, 0xfe, 0xc0, 0x78, 0xff, 0x80, 0x00, 0x07, 0xff, 0xc0, 
  0x78, 0xff, 0xc0, 0x00, 0x07, 0xff, 0x68, 0xf8, 0xff, 0xc0, 0x00, 0x0f, 0xff, 0x3b, 0xf8, 0xff, 
  0xe0, 0x00, 0x0f, 0xfe, 0x1f, 0xf8, 0xff, 0xf0, 0x00, 0x0f, 0xfe, 0x1f, 0xf8, 0xff, 0xf8, 0x00, 
  0x0f, 0xfc, 0x0f, 0xf8, 0xff, 0xfc, 0x00, 0x0f, 0xf8, 0x0f, 0xf8, 0xff, 0xff, 0x80, 0x0f, 0xf0, 
  0x0f, 0xf8, 0xff, 0xff, 0xc0, 0x07, 0xd0, 0x0f, 0xf8, 0xff, 0xff, 0xc0, 0x01, 0x30, 0x0f, 0xf8, 
  0xff, 0xff, 0xc0, 0x00, 0xf8, 0x1f, 0xf8, 0xff, 0xff, 0x80, 0x7f, 0xf0, 0x3f, 0xf8, 0xff, 0xff, 
  0xc0, 0xff, 0xf0, 0x7f, 0xf8, 0xff, 0xff, 0xe0, 0xff, 0xf9, 0xbf, 0xf8, 0xff, 0xff, 0xb6, 0xff, 
  0xff, 0xff, 0xf8, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xf8
};
// 'char4', 53x54px
const unsigned char epd_bitmap_char4 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xdb, 0xff, 0xff, 
  0xff, 0xff, 0xf8, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 
  0xf8, 0xff, 0xe4, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xec, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 
  0xcc, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xc6, 0x7f, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xc0, 0xff, 
  0xff, 0xff, 0xff, 0xf8, 0xff, 0xe1, 0xff, 0xe7, 0xf9, 0xff, 0xf8, 0xff, 0xf1, 0xe0, 0x87, 0xf8, 
  0xff, 0xf8, 0xff, 0xf1, 0x80, 0x0f, 0xfc, 0xdf, 0xf8, 0xff, 0xf8, 0x00, 0x0f, 0xfe, 0x07, 0xf8, 
  0xff, 0xf0, 0x00, 0x1f, 0xfe, 0x03, 0xf8, 0xff, 0xf0, 0x00, 0x1f, 0xfe, 0x00, 0xf8, 0xff, 0xf0, 
  0x00, 0x1f, 0xfc, 0x00, 0xf8, 0xff, 0xf0, 0x00, 0x1f, 0xfc, 0x00, 0xf8, 0xff, 0xf0, 0x00, 0x1f, 
  0xfc, 0x00, 0x78, 0xff, 0xe0, 0x00, 0x1f, 0xfc, 0x00, 0x38, 0xff, 0xe0, 0x00, 0x0f, 0xfc, 0x00, 
  0x18, 0xff, 0xe0, 0x00, 0x0f, 0xf8, 0x00, 0x18, 0xff, 0xc0, 0x00, 0x0f, 0xf0, 0x00, 0x18, 0xff, 
  0xc0, 0x80, 0x03, 0xe0, 0x00, 0x18, 0xff, 0x81, 0xc0, 0x03, 0xc0, 0xc0, 0x18, 0xff, 0x83, 0xc0, 
  0x01, 0x00, 0x40, 0x38, 0xff, 0x83, 0xef, 0x00, 0x00, 0x00, 0x38, 0xff, 0x87, 0xff, 0x80, 0x00, 
  0x00, 0x18, 0xff, 0x87, 0xff, 0xc0, 0x00, 0x00, 0x08, 0xff, 0x87, 0xff, 0x80, 0x03, 0x04, 0x18, 
  0xff, 0x83, 0xf8, 0x00, 0x00, 0x00, 0x38, 0xff, 0x83, 0xf0, 0x00, 0x00, 0x00, 0x18, 0xff, 0x81, 
  0xf0, 0x00, 0x00, 0x00, 0x18, 0xff, 0x81, 0xe1, 0x00, 0x19, 0x80, 0x08, 0xff, 0x80, 0xe0, 0x00, 
  0x3d, 0xc0, 0x08, 0xff, 0x80, 0x60, 0x00, 0xfe, 0xe0, 0x18, 0xff, 0xc0, 0x00, 0x03, 0xfe, 0xe0, 
  0x78, 0xff, 0xe0, 0x00, 0x07, 0xff, 0xf4, 0xf8, 0xff, 0xe0, 0x00, 0x07, 0xff, 0x7f, 0xf8, 0xff, 
  0xe0, 0x00, 0x0f, 0xff, 0x3f, 0xf8, 0xff, 0xe0, 0x00, 0x0f, 0xfe, 0x1f, 0xf8, 0xff, 0xf0, 0x00, 
  0x0f, 0xfe, 0x1f, 0xf8, 0xff, 0xf8, 0x00, 0x0f, 0xfc, 0x0f, 0xf8, 0xff, 0xfc, 0x00, 0x0f, 0xf8, 
  0x0f, 0xf8, 0xff, 0xff, 0x80, 0x07, 0xf0, 0x0f, 0xf8, 0xff, 0xff, 0xc0, 0x0f, 0xe0, 0x0f, 0xf8, 
  0xff, 0xff, 0xc0, 0x03, 0x10, 0x1f, 0xf8, 0xff, 0xff, 0xc0, 0x10, 0xf0, 0x3f, 0xf8, 0xff, 0xff, 
  0xc0, 0x63, 0xf0, 0x7f, 0xf8, 0xff, 0xff, 0xe0, 0xff, 0xf9, 0xbf, 0xf8, 0xff, 0xff, 0xb6, 0xff, 
  0xff, 0xff, 0xf8, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xf8
};
// 'char5', 53x54px
const unsigned char epd_bitmap_char5 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xf8, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xf8, 0xff, 
  0xff, 0xc7, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0x93, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0x83, 
  0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0x0b, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0x00, 0xe7, 0xf1, 
  0xff, 0xf8, 0xff, 0xff, 0x00, 0x07, 0xf9, 0xbf, 0xf8, 0xff, 0xff, 0x00, 0x07, 0xf8, 0x0f, 0xf8, 
  0xff, 0xff, 0x00, 0x0f, 0xfc, 0x07, 0xf8, 0xff, 0xfe, 0x00, 0x0f, 0xfc, 0x03, 0xf8, 0xff, 0xfe, 
  0x00, 0x1f, 0xfc, 0x01, 0xf8, 0xff, 0xfc, 0x00, 0x1f, 0xfc, 0x00, 0xf8, 0xff, 0xfc, 0x00, 0x1f, 
  0xfc, 0x00, 0xf8, 0xff, 0xf8, 0x00, 0x1f, 0xfc, 0x00, 0x78, 0xff, 0xf8, 0x00, 0x1f, 0xf8, 0x00, 
  0x78, 0xff, 0xf0, 0x00, 0x0f, 0xf8, 0x00, 0x38, 0xff, 0xf0, 0x00, 0x07, 0xf8, 0x00, 0x38, 0xff, 
  0xf0, 0x00, 0x07, 0xf0, 0x00, 0x38, 0xff, 0xf0, 0xe0, 0x03, 0xe0, 0xc0, 0x38, 0xff, 0xe0, 0xe0, 
  0x03, 0xc0, 0xe0, 0x38, 0xff, 0xe0, 0xe3, 0x01, 0x00, 0x00, 0x38, 0xff, 0xe0, 0xff, 0x80, 0x00, 
  0x00, 0x18, 0xff, 0xe1, 0xff, 0xc0, 0x00, 0x00, 0x18, 0xff, 0xe1, 0xff, 0xc0, 0x02, 0x04, 0x08, 
  0xff, 0xe0, 0xf8, 0x00, 0x03, 0x00, 0x18, 0xff, 0xe0, 0xf0, 0x00, 0x00, 0x00, 0x38, 0xff, 0xc0, 
  0xf0, 0x00, 0x00, 0x00, 0x18, 0xff, 0xe0, 0xe3, 0x00, 0x01, 0x80, 0x18, 0xff, 0xe0, 0xe1, 0x00, 
  0x39, 0xc0, 0x08, 0xff, 0xe0, 0x40, 0x00, 0x7e, 0xc0, 0x08, 0xff, 0xe0, 0x00, 0x00, 0xfe, 0xe0, 
  0x38, 0xff, 0xe0, 0x00, 0x03, 0xff, 0xf2, 0xf8, 0xff, 0xe0, 0x00, 0x07, 0xff, 0x7f, 0xf8, 0xff, 
  0xe0, 0x00, 0x07, 0xff, 0x7f, 0xf8, 0xff, 0xe0, 0x00, 0x0f, 0xff, 0x1f, 0xf8, 0xff, 0xe0, 0x00, 
  0x0f, 0xfe, 0x1f, 0xf8, 0xff, 0xf0, 0x00, 0x0f, 0xfe, 0x0f, 0xf8, 0xff, 0xfc, 0x00, 0x0f, 0xfc, 
  0x0f, 0xf8, 0xff, 0xfe, 0x00, 0x0f, 0xf8, 0x0f, 0xf8, 0xff, 0xff, 0x00, 0x0f, 0xf0, 0x0f, 0xf8, 
  0xff, 0xff, 0xc0, 0x07, 0xc0, 0x1f, 0xf8, 0xff, 0xff, 0xc0, 0x01, 0x30, 0x3f, 0xf8, 0xff, 0xff, 
  0xc0, 0x3e, 0xf0, 0x7f, 0xf8, 0xff, 0xff, 0xe0, 0xff, 0xf9, 0xbf, 0xf8, 0xff, 0xff, 0xb6, 0xff, 
  0xff, 0xff, 0xf8, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xf8
};


// 'psy1', 51x54px
const unsigned char epd_bitmap_psy1 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0x7f, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xf0, 0x01, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xf3, 0xf1, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xef, 0xf8, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xcf, 0xfc, 
  0x7f, 0xff, 0xe0, 0xff, 0xff, 0xdf, 0xf8, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0xdf, 0xc2, 0x7f, 0xff, 
  0xe0, 0xff, 0xff, 0xde, 0x88, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0xdf, 0xff, 0x3f, 0xff, 0xe0, 0xff, 
  0xff, 0xc4, 0xff, 0x9f, 0xff, 0xe0, 0xff, 0xff, 0xe0, 0x3f, 0xef, 0xff, 0xe0, 0xff, 0xff, 0x80, 
  0x1f, 0xcf, 0xff, 0xe0, 0xff, 0xff, 0x1f, 0x8e, 0x0f, 0xff, 0xe0, 0xff, 0xfe, 0x7f, 0xe0, 0x0f, 
  0xff, 0xe0, 0xff, 0xfc, 0xff, 0xf8, 0x07, 0xff, 0xe0, 0xff, 0xfc, 0xef, 0xfc, 0x03, 0xff, 0xe0, 
  0xff, 0xf9, 0xcf, 0xfc, 0x03, 0xff, 0xe0, 0xff, 0xf9, 0x9f, 0xfc, 0x01, 0xff, 0xe0, 0xff, 0xf0, 
  0x1f, 0xfc, 0x03, 0xff, 0xe0, 0xff, 0xf8, 0x1f, 0xfc, 0x27, 0xff, 0xe0, 0xff, 0xfc, 0x1f, 0xf8, 
  0x3f, 0xff, 0xe0, 0xff, 0xff, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 
  0xe0, 0xff, 0xff, 0x80, 0x00, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0xe0, 0x01, 0x3f, 0xff, 0xe0, 0xff, 
  0xff, 0xc2, 0x00, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0xe0, 0x20, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0
};
// 'psy2', 51x54px
const unsigned char epd_bitmap_psy2 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xc1, 0x83, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xef, 0xe1, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xdf, 0xe1, 
  0xff, 0xff, 0xe0, 0xff, 0xff, 0x9f, 0xc8, 0xff, 0xff, 0xe0, 0xff, 0xff, 0x9f, 0x00, 0x7f, 0xff, 
  0xe0, 0xff, 0xff, 0x9e, 0xbf, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0x99, 0xff, 0xbf, 0xff, 0xe0, 0xff, 
  0xff, 0x99, 0xff, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0x88, 0x78, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0x00, 
  0x00, 0x07, 0xff, 0xe0, 0xff, 0xf0, 0x3f, 0x00, 0x01, 0xff, 0xe0, 0xff, 0xf1, 0xff, 0xc0, 0x01, 
  0xff, 0xe0, 0xff, 0xf3, 0xff, 0xf8, 0x01, 0xff, 0xe0, 0xff, 0xf1, 0x8f, 0xfc, 0x01, 0xff, 0xe0, 
  0xff, 0xf8, 0x0f, 0xfc, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0x1f, 0xfc, 0x3f, 0xff, 0xe0, 0xff, 0xff, 
  0x9f, 0xfc, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0x1f, 0xfc, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0x0f, 0xf8, 
  0x3f, 0xff, 0xe0, 0xff, 0xff, 0x87, 0xf0, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 
  0xe0, 0xff, 0xff, 0xc0, 0x00, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0xe0, 0x00, 0x9f, 0xff, 0xe0, 0xff, 
  0xff, 0xc0, 0x00, 0x1f, 0xff, 0xe0, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0
};
// 'psy3', 51x54px
const unsigned char epd_bitmap_psy3 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0x81, 0x03, 0xff, 0xff, 0xe0, 0xff, 0xff, 0x0f, 0xc0, 0xff, 0xff, 0xe0, 0xff, 0xff, 0x1f, 0x9e, 
  0x7f, 0xff, 0xe0, 0xff, 0xff, 0x1f, 0x7f, 0x3f, 0xff, 0xe0, 0xff, 0xfe, 0x1f, 0x60, 0x3f, 0xff, 
  0xe0, 0xff, 0xfc, 0x5f, 0xc0, 0x1f, 0xff, 0xe0, 0xff, 0xfc, 0xd9, 0x80, 0x1f, 0xff, 0xe0, 0xff, 
  0xfc, 0xe9, 0x80, 0x1f, 0xff, 0xe0, 0xff, 0xfc, 0xf0, 0x40, 0x1f, 0xff, 0xe0, 0xff, 0xfc, 0xf0, 
  0x30, 0x3f, 0xff, 0xe0, 0xff, 0xfe, 0x7b, 0x00, 0x3f, 0xff, 0xe0, 0xff, 0xfe, 0x3f, 0xf0, 0x3f, 
  0xff, 0xe0, 0xff, 0xff, 0x8f, 0xfc, 0x1f, 0xff, 0xe0, 0xff, 0xff, 0xcf, 0xfc, 0x1f, 0xff, 0xe0, 
  0xff, 0xff, 0xcf, 0xfe, 0x0f, 0xff, 0xe0, 0xff, 0xff, 0xdf, 0xfe, 0x0f, 0xff, 0xe0, 0xff, 0xff, 
  0xdf, 0xfe, 0x0f, 0xff, 0xe0, 0xff, 0xff, 0x9f, 0xfe, 0x0f, 0xff, 0xe0, 0xff, 0xff, 0x8f, 0xfc, 
  0x0f, 0xff, 0xe0, 0xff, 0xff, 0x87, 0xf0, 0x1f, 0xff, 0xe0, 0xff, 0xff, 0xc0, 0x00, 0x3f, 0xff, 
  0xe0, 0xff, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0xe0, 0xff, 0xff, 0xe0, 0x00, 0xcf, 0xff, 0xe0, 0xff, 
  0xff, 0xc0, 0x00, 0x0f, 0xff, 0xe0, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0
};
// 'psy4', 51x54px
const unsigned char epd_bitmap_psy4 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xfc, 0x03, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xf8, 0xf0, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0xf3, 0xfc, 0x1f, 0xff, 0xe0, 0xff, 0xff, 0xe7, 0xfc, 
  0x5f, 0xff, 0xe0, 0xff, 0xff, 0xef, 0xfd, 0x0f, 0xff, 0xe0, 0xff, 0xff, 0xcf, 0xef, 0x0f, 0xff, 
  0xe0, 0xff, 0xff, 0x87, 0xc0, 0x07, 0xff, 0xe0, 0xff, 0xff, 0x97, 0x0c, 0x07, 0xff, 0xe0, 0xff, 
  0xff, 0xb7, 0xff, 0x07, 0xff, 0xe0, 0xff, 0xff, 0xba, 0xff, 0x0f, 0xff, 0xe0, 0xff, 0xff, 0x78, 
  0x7f, 0x9f, 0xff, 0xe0, 0xff, 0xff, 0x78, 0x3f, 0xdf, 0xff, 0xe0, 0xff, 0xff, 0x39, 0x1f, 0x9f, 
  0xff, 0xe0, 0xff, 0xff, 0x87, 0x80, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0x8f, 0xe0, 0x3f, 0xff, 0xe0, 
  0xff, 0xff, 0xdf, 0xfc, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0x9f, 0xfe, 0x3f, 0xff, 0xe0, 0xff, 0xff, 
  0x9f, 0xfe, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0x9f, 0xfe, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0x1f, 0xfc, 
  0x3f, 0xff, 0xe0, 0xff, 0xff, 0x0f, 0xf0, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 
  0xe0, 0xff, 0xff, 0x80, 0x00, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0xe0, 0x01, 0x3f, 0xff, 0xe0, 0xff, 
  0xff, 0xc0, 0x00, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0xe0, 0x20, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0
};
// 'psy5', 51x54px
const unsigned char epd_bitmap_psy5 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xfe, 0x03, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0x03, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xfc, 0xf0, 
  0x7f, 0xff, 0xe0, 0xff, 0xff, 0xf9, 0xfc, 0x0f, 0xff, 0xe0, 0xff, 0xff, 0xc3, 0xfe, 0x0f, 0xff, 
  0xe0, 0xff, 0xff, 0xc3, 0xfe, 0x07, 0xff, 0xe0, 0xff, 0xff, 0x9f, 0xfd, 0x87, 0xff, 0xe0, 0xff, 
  0xff, 0xba, 0xe0, 0x07, 0xff, 0xe0, 0xff, 0xff, 0xbb, 0x86, 0x07, 0xff, 0xe0, 0xff, 0xff, 0xbb, 
  0xbf, 0x87, 0xff, 0xe0, 0xff, 0xff, 0xbd, 0x3f, 0x87, 0xff, 0xe0, 0xff, 0xff, 0x98, 0x3f, 0x8f, 
  0xff, 0xe0, 0xff, 0xff, 0x80, 0x1f, 0xcf, 0xff, 0xe0, 0xff, 0xff, 0xc3, 0x9f, 0xef, 0xff, 0xe0, 
  0xff, 0xff, 0xcf, 0xdf, 0xcf, 0xff, 0xe0, 0xff, 0xff, 0xcf, 0xec, 0x1f, 0xff, 0xe0, 0xff, 0xff, 
  0xdf, 0xf0, 0x1f, 0xff, 0xe0, 0xff, 0xff, 0xdf, 0xfc, 0x1f, 0xff, 0xe0, 0xff, 0xff, 0x9f, 0xfc, 
  0x1f, 0xff, 0xe0, 0xff, 0xff, 0x8f, 0xfc, 0x1f, 0xff, 0xe0, 0xff, 0xff, 0x87, 0xf0, 0x1f, 0xff, 
  0xe0, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xff, 0xe0, 0xff, 0xff, 0xe0, 0x00, 0x47, 0xff, 0xe0, 0xff, 
  0xff, 0xc0, 0x00, 0x07, 0xff, 0xe0, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0
};


// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 2640)
const unsigned char* const bitmaps[] PROGMEM = {
  epd_bitmap_char1,
  //epd_bitmap_char2,
  //epd_bitmap_char3,
  //epd_bitmap_char4,
  epd_bitmap_char5,
  //epd_bitmap_psy1,
  epd_bitmap_psy2,
  //epd_bitmap_psy3,
  epd_bitmap_psy4,
  //epd_bitmap_psy5,
  epd_bitmap_gen1,
  //epd_bitmap_gen2,
  epd_bitmap_gen3,
  //epd_bitmap_gen4,
  //epd_bitmap_gen5,
  epd_bitmap_pig1,
  //epd_bitmap_pig2,
  //epd_bitmap_pig3,
  //epd_bitmap_pig4,
  epd_bitmap_pig5,
  epd_bitmap_sal1,
  //epd_bitmap_sal2,
  //epd_bitmap_sal3,
  //epd_bitmap_sal4,
  epd_bitmap_sal5,
  //epd_bitmap_ent1,
  epd_bitmap_ent2,
  //epd_bitmap_ent3,
  epd_bitmap_ent4,
  //epd_bitmap_ent5,
  //epd_bitmap_rot1,
  //epd_bitmap_rot5
    //epd_bitmap_cat1,
  //epd_bitmap_cat2
};



// 'sword', 23x54px
const unsigned char epd_bitmap_sword [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x81, 0x00, 0x01, 
  0xc3, 0x00, 0x01, 0xc7, 0x00, 0x01, 0x8f, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 
  0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 
  0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 
  0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 
  0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 
  0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x8d, 0x00, 0x01, 0x85, 0x00, 0x30, 0x00, 0x18, 0x7f, 
  0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 
  0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00
};

// 'sword', 54x23px
const unsigned char epd_bitmap_sword_90 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xbf, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0xbf, 0xff, 0xff, 0xff, 0xc0, 0x30, 
  0x00, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x27, 0xac, 0x80, 
  0x00, 0x00, 0x00, 0x00, 0x27, 0xa8, 0x9f, 0xff, 0xff, 0xfe, 0x00, 0x30, 0x00, 0xbf, 0xff, 0xff, 
  0xff, 0x00, 0x30, 0x00, 0x80, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0xbf, 0xff, 0xff, 0xff, 0xc0, 
  0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00
};

// 'sword', 23x54px
const unsigned char epd_bitmap_sword_180 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x30, 0x00, 0x00, 0x30, 0x00, 0x00, 0x30, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x7f, 0xff, 0xfc, 0x30, 0x00, 0x18, 0x01, 0x43, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 
  0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 
  0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 
  0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 
  0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 
  0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0x63, 0x00, 0x01, 0xe3, 0x00, 0x01, 0xc7, 0x00, 
  0x01, 0x87, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00
};

// 'sword', 54x23px
const unsigned char epd_bitmap_sword_270 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 
  0x00, 0x0f, 0xff, 0xff, 0xff, 0xf4, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x30, 0x03, 
  0xff, 0xff, 0xff, 0xf4, 0x00, 0x30, 0x01, 0xff, 0xff, 0xff, 0xe4, 0x57, 0x90, 0x00, 0x00, 0x00, 
  0x00, 0x04, 0xd7, 0x90, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 
  0x00, 0x30, 0x0f, 0xff, 0xff, 0xff, 0xf4, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xf4, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00
};




const unsigned char epd_bitmap_um_frame1 [] PROGMEM = {
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf6, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xef, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x7f, 
  0xf0, 0x3f, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0x80, 0x3f, 0xff, 0xff, 0xff, 0xc0, 0xfe, 0x70, 0x7f, 
  0xff, 0xff, 0xff, 0xc1, 0xfc, 0x78, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x78, 0x39, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0x10, 0x1b, 0xff, 0xff, 0xff, 0xff, 0x9c, 0x00, 0x17, 0xff, 0xff, 0xff, 0xff, 0x24, 
  0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0x4c, 0x00, 0x3f, 0xff, 0x00, 0xff, 0xfe, 0x58, 0x01, 0xff, 
  0xfd, 0xc1, 0xff, 0xff, 0x70, 0x03, 0xff, 0xfb, 0xe1, 0xff, 0xfe, 0x03, 0x03, 0xff, 0xf0, 0xf3, 
  0xff, 0xfc, 0x03, 0x03, 0xff, 0xe0, 0x73, 0xff, 0xfc, 0x02, 0x03, 0xff, 0xc0, 0x77, 0xff, 0xfc, 
  0x00, 0x07, 0xff, 0xc0, 0x37, 0xff, 0xfe, 0x00, 0x07, 0xff, 0x80, 0x2f, 0xff, 0xff, 0x00, 0x07, 
  0xff, 0x80, 0x1f, 0xff, 0xff, 0xc0, 0x07, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x03, 0xc0, 0x07, 
  0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 
  0xff, 0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf0, 
  0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x1b, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x25, 0xff, 0xff, 0xff, 0xf8, 0x06, 0x00, 0x32, 0xff, 
  0xff, 0xff, 0xf8, 0x09, 0x40, 0x12, 0xff, 0xff, 0xff, 0xf0, 0x09, 0x60, 0x0c, 0x7f, 0xff, 0xff, 
  0xf0, 0x09, 0x70, 0x60, 0x7f, 0xff, 0xff, 0xf0, 0x46, 0xf8, 0x70, 0x7f, 0xff, 0xff, 0xf0, 0x40, 
  0xf8, 0x70, 0x7f, 0xff, 0xff, 0xf0, 0x40, 0xf8, 0x78, 0x3f, 0xff, 0xff, 0xe0, 0xc0, 0xf0, 0x78, 
  0x3f, 0xff, 0xff, 0xe0, 0xc1, 0xe0, 0xf8, 0x3f, 0xff, 0xff, 0xe1, 0xc1, 0xe0, 0xf8, 0x3f, 0xff, 
  0xff, 0xc1, 0x83, 0xf1, 0xf0, 0x7f, 0xff, 0xff, 0xc1, 0x83, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xe3, 
  0x07, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char epd_bitmap_um_frame2 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xf0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf6, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0x3f, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xe1, 0x7f, 0x80, 0x3f, 
  0xff, 0xff, 0xff, 0xe0, 0x7e, 0x70, 0x7f, 0xff, 0xff, 0xff, 0xc0, 0xfc, 0x38, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0x78, 0x39, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x10, 0x1b, 0xff, 0xff, 0xff, 0xff, 0x9c, 
  0x00, 0x17, 0xff, 0xff, 0xff, 0xff, 0x24, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x00, 0x3f, 
  0xff, 0xef, 0xff, 0xfe, 0x58, 0x01, 0xff, 0xff, 0x80, 0x7f, 0xff, 0x70, 0x03, 0xff, 0xfe, 0xe0, 
  0x7f, 0xfe, 0x02, 0x03, 0xff, 0xfd, 0xf0, 0xff, 0xfc, 0x03, 0x03, 0xff, 0xf8, 0x70, 0xff, 0xfc, 
  0x02, 0x03, 0xff, 0xf0, 0x39, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xe0, 0x39, 0xff, 0xfe, 0x00, 0x07, 
  0xff, 0xe0, 0x1b, 0xff, 0xff, 0x00, 0x07, 0xf8, 0x40, 0x1b, 0xff, 0xff, 0xc0, 0x03, 0xc0, 0x00, 
  0x07, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x07, 0xff, 0xff, 
  0xff, 0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf0, 
  0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x1b, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x25, 0xff, 0xff, 0xff, 0xf8, 0x06, 0x00, 0x32, 0xff, 
  0xff, 0xff, 0xf8, 0x09, 0x40, 0x12, 0xff, 0xff, 0xff, 0xf0, 0x09, 0x60, 0x0c, 0x7f, 0xff, 0xff, 
  0xf0, 0x09, 0x70, 0x60, 0x7f, 0xff, 0xff, 0xf0, 0x46, 0xf8, 0x70, 0x7f, 0xff, 0xff, 0xf0, 0x40, 
  0xf8, 0x70, 0x7f, 0xff, 0xff, 0xf0, 0x40, 0xf8, 0x78, 0x3f, 0xff, 0xff, 0xe0, 0xc0, 0xf0, 0x78, 
  0x3f, 0xff, 0xff, 0xe0, 0xc1, 0xe0, 0xf8, 0x3f, 0xff, 0xff, 0xe1, 0xc1, 0xe0, 0xf8, 0x3f, 0xff, 
  0xff, 0xc1, 0x83, 0xf1, 0xf0, 0x7f, 0xff, 0xff, 0xc1, 0x83, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xe3, 
  0x07, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char epd_bitmap_um_frame3 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x1f, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xf6, 0x3f, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xf0, 0x3f, 
  0xff, 0xff, 0xff, 0xe3, 0x3f, 0x80, 0x7f, 0xff, 0xff, 0xff, 0xe1, 0x7e, 0x70, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0x7c, 0x39, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xf8, 0x3b, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x10, 0x1b, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x17, 0xff, 0xff, 0xff, 0xff, 0x9c, 0x00, 0x0f, 
  0xff, 0xff, 0xff, 0xff, 0x24, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x01, 0xff, 0xff, 0xff, 
  0xff, 0xfe, 0x58, 0x03, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0x70, 0x03, 0xff, 0xfe, 0xe0, 0x3f, 0xfe, 
  0x02, 0x03, 0xff, 0xfd, 0xe0, 0xff, 0xfc, 0x03, 0x03, 0xff, 0xf8, 0x70, 0xff, 0xfc, 0x02, 0x07, 
  0xff, 0xe0, 0x39, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xe0, 0x39, 0xff, 0xfe, 0x00, 0x07, 0xf8, 0x40, 
  0x1b, 0xff, 0xff, 0x80, 0x03, 0xc0, 0x00, 0x1b, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x17, 0xff, 
  0xff, 0xf0, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf0, 
  0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x03, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x1b, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x25, 0xff, 
  0xff, 0xff, 0xf8, 0x06, 0x00, 0x35, 0xff, 0xff, 0xff, 0xf8, 0x09, 0x40, 0x15, 0xff, 0xff, 0xff, 
  0xf0, 0x09, 0x60, 0x0c, 0x7f, 0xff, 0xff, 0xf0, 0x09, 0x70, 0x60, 0x7f, 0xff, 0xff, 0xf0, 0x46, 
  0xf8, 0x70, 0x7f, 0xff, 0xff, 0xf0, 0x40, 0xf8, 0x78, 0x3f, 0xff, 0xff, 0xe0, 0xc0, 0xf0, 0x78, 
  0x3f, 0xff, 0xff, 0xe0, 0xc1, 0xe0, 0xf8, 0x3f, 0xff, 0xff, 0xe1, 0xc1, 0xe0, 0xf8, 0x3f, 0xff, 
  0xff, 0xc1, 0x83, 0xf1, 0xf0, 0x7f, 0xff, 0xff, 0xc1, 0x83, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xe3, 
  0x07, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char epd_bitmap_um_frame4 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xe0, 0x7f, 
  0xff, 0xff, 0xff, 0xec, 0x3f, 0x80, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x60, 0x7f, 0xff, 0xff, 
  0xff, 0xe3, 0x3e, 0x78, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x7c, 0x39, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x78, 0x1b, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xf0, 0x17, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x20, 0x0f, 
  0xff, 0xff, 0xff, 0xff, 0x98, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x28, 0x00, 0x3f, 0xff, 0xff, 
  0xff, 0xfe, 0x58, 0x01, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x58, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0x50, 0x03, 0xff, 0xff, 0x80, 0xff, 0xff, 0x72, 0x03, 0xff, 0xfe, 0xe0, 0x7f, 0xfe, 0x03, 0x03, 
  0xff, 0xf3, 0xe0, 0x7f, 0xfc, 0x02, 0x07, 0xff, 0xe0, 0xe1, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xc0, 
  0x73, 0xff, 0xfc, 0x00, 0x07, 0xf8, 0x40, 0x73, 0xff, 0xfe, 0x00, 0x03, 0xc0, 0x00, 0x37, 0xff, 
  0xff, 0x80, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 
  0x00, 0x00, 0x08, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x07, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x1b, 0xff, 
  0xff, 0xff, 0xf8, 0x00, 0x00, 0x25, 0xff, 0xff, 0xff, 0xf8, 0x06, 0x00, 0x32, 0xff, 0xff, 0xff, 
  0xf8, 0x09, 0x40, 0x12, 0xff, 0xff, 0xff, 0xf0, 0x09, 0x60, 0x0c, 0x7f, 0xff, 0xff, 0xf0, 0x09, 
  0x70, 0x60, 0x7f, 0xff, 0xff, 0xf0, 0x46, 0xf8, 0x70, 0x3f, 0xff, 0xff, 0xe0, 0xc0, 0xf0, 0x78, 
  0x3f, 0xff, 0xff, 0xe0, 0xc1, 0xe0, 0xf8, 0x3f, 0xff, 0xff, 0xe1, 0xc1, 0xe0, 0xf8, 0x3f, 0xff, 
  0xff, 0xc1, 0x83, 0xf1, 0xf0, 0x7f, 0xff, 0xff, 0xc1, 0x83, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xe3, 
  0x07, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char epd_bitmap_um_frame5 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xf0, 0x7f, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xec, 0x7f, 0xe0, 0x7f, 0xff, 0xff, 
  0xff, 0xee, 0x7f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xd7, 0x3e, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xe1, 
  0x7c, 0x73, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x78, 0x77, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xf0, 0x1b, 
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x30, 0x17, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x0f, 0xff, 0xff, 
  0xff, 0xff, 0xb8, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x48, 0x00, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0x18, 0x01, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xb0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x70, 0x03, 
  0xff, 0xff, 0x81, 0xff, 0xff, 0x42, 0x03, 0xff, 0xfc, 0xe0, 0x7f, 0xfe, 0x03, 0x07, 0xff, 0xf9, 
  0xe0, 0x7f, 0xfc, 0x02, 0x07, 0xf8, 0x40, 0x70, 0xff, 0xfc, 0x00, 0x03, 0xc0, 0x00, 0x71, 0xff, 
  0xfc, 0x00, 0x00, 0x00, 0x00, 0x73, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xa0, 
  0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x04, 0xbf, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x1b, 0xff, 
  0xff, 0xff, 0xf8, 0x00, 0x00, 0x25, 0xff, 0xff, 0xff, 0xf8, 0x06, 0x00, 0x32, 0xff, 0xff, 0xff, 
  0xf8, 0x09, 0x40, 0x12, 0xff, 0xff, 0xff, 0xf0, 0x09, 0x60, 0x0c, 0x7f, 0xff, 0xff, 0xf0, 0x09, 
  0x70, 0x60, 0x7f, 0xff, 0xff, 0xf0, 0x46, 0xf8, 0x70, 0x3f, 0xff, 0xff, 0xe0, 0xc0, 0xf0, 0x78, 
  0x3f, 0xff, 0xff, 0xe0, 0xc1, 0xe0, 0xf8, 0x3f, 0xff, 0xff, 0xe1, 0xc1, 0xe0, 0xf8, 0x3f, 0xff, 
  0xff, 0xc1, 0x83, 0xf1, 0xf0, 0x7f, 0xff, 0xff, 0xc1, 0x83, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xe3, 
  0x07, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char epd_bitmap_um_frame6 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xe0, 0x7f, 
  0xff, 0xff, 0xff, 0xec, 0x3f, 0x80, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x60, 0x7f, 0xff, 0xff, 
  0xff, 0xe3, 0x3e, 0x78, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x7c, 0x39, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x78, 0x1b, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xf0, 0x17, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x20, 0x0f, 
  0xff, 0xff, 0xff, 0xff, 0x98, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x28, 0x00, 0x3f, 0xff, 0xff, 
  0xff, 0xfe, 0x58, 0x01, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x58, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0x50, 0x03, 0xff, 0xff, 0x80, 0xff, 0xff, 0x72, 0x03, 0xff, 0xfe, 0xe0, 0x7f, 0xfe, 0x00, 0x03, 
  0xff, 0xf3, 0xe0, 0x7f, 0xfc, 0x00, 0x07, 0xff, 0xe0, 0xe1, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xc0, 
  0x73, 0xff, 0xfc, 0x00, 0x07, 0xf8, 0x40, 0x73, 0xff, 0xfe, 0x00, 0x03, 0xc0, 0x00, 0x37, 0xff, 
  0xff, 0x80, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 
  0x00, 0x00, 0x08, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x07, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x1b, 0xff, 
  0xff, 0xff, 0xf8, 0x00, 0x00, 0x25, 0xff, 0xff, 0xff, 0xf8, 0x06, 0x00, 0x32, 0xff, 0xff, 0xff, 
  0xf8, 0x09, 0x40, 0x12, 0xff, 0xff, 0xff, 0xf0, 0x09, 0x60, 0x0c, 0x7f, 0xff, 0xff, 0xf0, 0x09, 
  0x70, 0x60, 0x7f, 0xff, 0xff, 0xf0, 0x46, 0xf8, 0x70, 0x3f, 0xff, 0xff, 0xe0, 0xc0, 0xf0, 0x78, 
  0x3f, 0xff, 0xff, 0xe0, 0xc1, 0xe0, 0xf8, 0x3f, 0xff, 0xff, 0xe1, 0xc1, 0xe0, 0xf8, 0x3f, 0xff, 
  0xff, 0xc1, 0x83, 0xf1, 0xf0, 0x7f, 0xff, 0xff, 0xc1, 0x83, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xe3, 
  0x07, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char epd_bitmap_binary [] PROGMEM = {
  0xff, 0xf7, 0xff, 0xbf, 0xfc, 0xff, 0xef, 0xff, 0xff, 0xfc, 0xff, 0xf7, 0xff, 0xbf, 0xfc, 0xff, 
  0xef, 0xff, 0xff, 0xfc, 0xc0, 0x76, 0x01, 0xb8, 0x0c, 0xc0, 0x6c, 0x03, 0xf3, 0x8c, 0xce, 0x37, 
  0x87, 0xb9, 0x8c, 0xfc, 0x6c, 0x63, 0xf3, 0x8c, 0xce, 0x77, 0x87, 0xb9, 0x8c, 0xfc, 0x6c, 0x63, 
  0xf3, 0x8c, 0xc0, 0xf1, 0x87, 0x39, 0x8c, 0xc0, 0x6c, 0x63, 0xf0, 0x0c, 0xc0, 0xf1, 0x87, 0x39, 
  0x8c, 0xc0, 0x6c, 0x73, 0xf0, 0x0c, 0xce, 0x37, 0x87, 0xb9, 0x8c, 0xcc, 0x6c, 0x7f, 0xff, 0x8c, 
  0xce, 0x37, 0x01, 0xb9, 0x8c, 0xcc, 0x6c, 0x7f, 0xff, 0x8c, 0xc0, 0x77, 0x01, 0xb9, 0x8c, 0xc0, 
  0x6c, 0x60, 0x70, 0x0c, 0xff, 0xf7, 0xff, 0xbf, 0xfc, 0xff, 0xef, 0xe0, 0x7f, 0xfc, 0xff, 0xf7, 
  0xff, 0xbf, 0xfc, 0xff, 0xef, 0xe0, 0x7f, 0xfc
};

// 'blade', 70x12px
const unsigned char epd_bitmap_blade [] PROGMEM = {
  0x3f, 0xfe, 0xff, 0x03, 0xff, 0xc0, 0x7f, 0x3f, 0xfc, 0x3f, 0xfe, 0xff, 0x03, 0xff, 0xcf, 0x7f, 
  0x3f, 0xfc, 0x38, 0x0e, 0xe7, 0x03, 0x00, 0xcf, 0xe3, 0x30, 0x0c, 0x38, 0xce, 0xe3, 0x03, 0xfc, 
  0xcf, 0xe3, 0x33, 0x8c, 0x38, 0xde, 0xe3, 0x03, 0xfc, 0xcc, 0x03, 0x33, 0x8c, 0x38, 0x1e, 0xe3, 
  0x03, 0x00, 0xcc, 0x63, 0x30, 0x0c, 0x38, 0x1e, 0xe3, 0x03, 0x00, 0xcc, 0x63, 0x30, 0x0c, 0x38, 
  0xce, 0xe3, 0xfb, 0x1c, 0xcc, 0x63, 0x33, 0xfc, 0x38, 0xce, 0xe3, 0xfb, 0x1c, 0xcc, 0x63, 0x33, 
  0xfc, 0x38, 0x0e, 0xe0, 0x3b, 0x00, 0xcc, 0x03, 0x30, 0x0c, 0x3f, 0xfe, 0xff, 0xfb, 0xff, 0xcf, 
  0xff, 0x3f, 0xfc, 0x3f, 0xfe, 0xff, 0xfb, 0xff, 0xcf, 0xff, 0x3f, 0xfc
};


//const unsigned char epd_bitmap_2s [] PROGMEM = {
//  0x00, 0x70, 0x00, 0x00, 0x70, 0x00, 0xfe, 0x63, 0xf8, 0xff, 0xef, 0xf8, 0x03, 0x8c, 0x00, 0x3e, 
//  0x03, 0xe0, 0x7e, 0x03, 0xe0, 0xe0, 0x00, 0x38, 0xff, 0x8f, 0xf8
//};


const unsigned char epd_bitmap_2s [] PROGMEM = {
  0x00, 0x70, 0x00, 0x00, 0x70, 0x00, 0xfe, 0x63, 0xf8, 0xff, 0xef, 0xf8, 0x03, 0x8c, 0x00, 0x3e, 
  0x03, 0xe0, 0x7e, 0x03, 0xe0, 0xe0, 0x00, 0x38, 0xff, 0x8f, 0xf8
};


const unsigned char epd_bitmap_comp [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x1f, 0x98, 0x6f, 0xe6, 0x03, 
  0xfd, 0x86, 0xff, 0x61, 0xbf, 0xc0, 0x36, 0x7f, 0x9f, 0x9f, 0xef, 0xf6, 0x03, 0xfd, 0xfe, 0xff, 
  0x79, 0xbf, 0xc0, 0x36, 0x61, 0xb0, 0xdf, 0xec, 0x36, 0x03, 0x01, 0xfe, 0xc0, 0x79, 0x86, 0x00, 
  0x36, 0x60, 0x30, 0xdb, 0x6f, 0xe6, 0x03, 0xf9, 0xb6, 0xfe, 0x6d, 0x86, 0x00, 0x36, 0x60, 0x30, 
  0xdb, 0x6f, 0xe6, 0x03, 0xf9, 0xb6, 0xfe, 0x6d, 0x86, 0x00, 0x36, 0x61, 0xb0, 0xd8, 0x6c, 0x06, 
  0x03, 0x01, 0x86, 0xc0, 0x67, 0x86, 0x00, 0x00, 0x7f, 0xbf, 0xd8, 0x6c, 0x07, 0xfb, 0xfd, 0x86, 
  0xff, 0x67, 0x86, 0x00, 0x36
};


const unsigned char epd_bitmap_drag1 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0f, 0x0c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x02, 0x80, 0x14, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x07, 0x38, 
  0x2b, 0x88, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x64, 0x54, 0x10, 0x00, 0x00, 0x00, 0x00, 
  0x01, 0xff, 0xfe, 0x88, 0xa8, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf7, 0x20, 0xd0, 0x10, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x01, 0xb0, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x40, 0x01, 0x9c, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd3, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0xd0, 0x3c, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x00, 0x08, 
  0xe8, 0x30, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x02, 0x00, 0x07, 0xe8, 0x40, 0x00, 0x07, 0xf8, 0x40, 
  0x00, 0x02, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x1f, 0xf8, 0xc0, 0x00, 0x02, 0x10, 0x00, 0x10, 0x00, 
  0x00, 0x7f, 0xff, 0xc0, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0x01, 0x80, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x40, 0x34, 0x20, 0x70, 0x7f, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0b, 0xfc, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x20, 0x00, 0x10, 
  0x02, 0x78, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x18, 0x00, 0x00, 0x80, 0x00, 
  0x00, 0x10, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x08, 0x10, 0x06, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x20, 0x13, 0xf0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
  0x10, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x30, 0x00, 0x60, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x04, 0xf8, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x1a, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0xff, 0x03, 0xc0, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc3, 0xe3, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf7, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
  0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0xc1, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'drag2', 74x59px
const unsigned char epd_bitmap_drag2 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x60, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 
  0x0f, 0xff, 0xf7, 0xe0, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x61, 0xff, 0xff, 0xff, 0xc0, 0x1f, 0xc0, 
  0x00, 0x00, 0x01, 0x07, 0xff, 0xff, 0xff, 0x80, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 
  0x7f, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x08, 0x00, 0x01, 0x80, 0x00, 0x00, 
  0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x54, 0x00, 0x33, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x94, 0x30, 0x48, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
  0x74, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x06, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x02, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x40, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
  0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x0a, 0x40, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x30, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xff, 0xfc, 0x0f, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x0f, 
  0x8f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xdf, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x03, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x07, 0xff, 0xf0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char epd_bitmap_drag3 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x64, 0x0f, 0xf8, 0x18, 0x00, 0x00, 0x00, 0x00, 0x30, 
  0x0b, 0x8b, 0xff, 0xfc, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x64, 0x54, 0x1f, 0xff, 0xff, 0xf0, 0x00, 
  0x00, 0x00, 0x02, 0x88, 0xa8, 0x1f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x07, 0x20, 0xd0, 0x10, 
  0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x1c, 0x01, 0xb0, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0x9c, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd3, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0xd0, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 
  0xe8, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x07, 0xe8, 0x40, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x02, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x10, 0x00, 0x10, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 
  0x80, 0x01, 0x80, 0x00, 0x00, 0x00, 0x01, 0x7f, 0x80, 0x40, 0x34, 0x20, 0x40, 0x00, 0x00, 0x00, 
  0x07, 0xff, 0xc0, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x00, 0x10, 
  0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xb0, 
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfc, 0x07, 0x80, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
  0xff, 0x0f, 0x87, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x83, 0xff, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


const unsigned char epd_bitmap_drag4 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x60, 0x00, 0x04, 0xe0, 0x07, 0xff, 0xc0, 
  0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x03, 0x3e, 0xf0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x00, 0x33, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x94, 0x30, 0x48, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
  0x74, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x06, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x02, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x40, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
  0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x2a, 0x40, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x40, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x72, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x0c, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x03, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
  0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x97, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x70, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x1f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xbc, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'drag5', 74x59px
const unsigned char epd_bitmap_drag5 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 
  0x0a, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x1c, 0x0a, 0x90, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x05, 0xc2, 0x11, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x1c, 0x16, 0x88, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xc0, 0x29, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x78, 0x04, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x0e, 0xf8, 0x04, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x04, 0x00, 0x01, 0xf0, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x90, 0x00, 0x40, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x40, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x1c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x17, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 
  0x60, 0x04, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x10, 0x04, 0x0c, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x18, 0xf2, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0xf0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'drag6', 74x59px
const unsigned char epd_bitmap_drag6 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xf8, 0x0c, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfc, 
  0x7a, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x1f, 0xfa, 0x10, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0xf9, 0xc1, 0xc3, 0xf1, 0x10, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x07, 0x1f, 0xb6, 0x88, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xc0, 0x29, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x78, 0x04, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x0e, 0xf8, 0x04, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x04, 0x00, 0x01, 0xf0, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x01, 0xc0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x90, 0x00, 0x40, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x40, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x1c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x17, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 
  0x60, 0x04, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x10, 0x04, 0x0c, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x18, 0xf2, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0xf0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xfc, 0x03, 0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x07, 
  0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xef, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x8b, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


// 'pory1', 48x48px
const unsigned char epd_bitmap_pory1 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x03, 0xcc, 0x80, 0x00, 0x00, 0x00, 0x3f, 0xbf, 0x60, 
  0x00, 0x00, 0x07, 0xfd, 0xb7, 0xa0, 0x00, 0x00, 0x3f, 0xaa, 0xdf, 0xb0, 0x00, 0x00, 0x3d, 0x55, 
  0x6f, 0x70, 0x00, 0x00, 0x00, 0x02, 0xb0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x3c, 0x00, 0x03, 0x00, 
  0x00, 0x00, 0xea, 0x40, 0x00, 0x00, 0x00, 0x03, 0xd5, 0x70, 0x00, 0x00, 0x00, 0x0f, 0xaa, 0x78, 
  0x00, 0x00, 0x00, 0x2a, 0x15, 0x7e, 0x00, 0x00, 0x00, 0x14, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x0a, 
  0x00, 0x1f, 0x00, 0x00, 0x00, 0x14, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x70, 0x00, 0x00, 0x75, 0x00, 0x00, 
  0xfa, 0x00, 0x00, 0xfa, 0x00, 0x01, 0x7d, 0x00, 0x01, 0xe9, 0x00, 0x02, 0xae, 0x00, 0x01, 0x50, 
  0x00, 0x05, 0x54, 0x00, 0x02, 0xa0, 0x00, 0x0a, 0xa8, 0x00, 0x05, 0x40, 0x00, 0x05, 0x50, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'pory2', 48x48px
const unsigned char epd_bitmap_pory2 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x03, 0xcc, 0x80, 0x00, 0x00, 0x00, 0x3f, 0xbf, 0x60, 
  0x00, 0x00, 0x07, 0xfd, 0xb7, 0xa0, 0x00, 0x00, 0x3f, 0xaa, 0xdf, 0xb0, 0x00, 0x00, 0x3d, 0x55, 
  0x6f, 0x70, 0x00, 0x00, 0x00, 0x02, 0xb0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};



const unsigned char epd_bitmap_kmap [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x3f, 
  0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x04, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x03, 
  0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x03, 0xff, 0xfe, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x04, 0x03, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 
  0x01, 0xff, 0xfe, 0x01, 0xe0, 0x00, 0x00, 0x03, 0x80, 0x00, 0x11, 0x00, 0x39, 0xfe, 0x03, 0x10, 
  0x00, 0x00, 0x1c, 0x7f, 0xff, 0xf1, 0xff, 0xf0, 0xfe, 0x02, 0x10, 0x00, 0x00, 0x12, 0x40, 0x00, 
  0x71, 0x00, 0x09, 0xfe, 0x02, 0x10, 0x00, 0x00, 0x13, 0x80, 0x00, 0x11, 0x00, 0x06, 0x7e, 0x01, 
  0xe0, 0xf0, 0x00, 0x10, 0x00, 0x00, 0x0e, 0x00, 0x06, 0x7e, 0x01, 0xe1, 0x08, 0x00, 0x10, 0x00, 
  0x00, 0x04, 0x00, 0x05, 0x7e, 0x01, 0x21, 0x0f, 0xff, 0xf0, 0x00, 0x00, 0x04, 0x00, 0x08, 0xfe, 
  0x01, 0x21, 0x08, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0x7e, 0x00, 0xc0, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x04, 0x00, 0x02, 0xfe, 0x00, 0x40, 0x90, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x02, 
  0xfe, 0x00, 0x40, 0x90, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x02, 0xfe, 0x00, 0x40, 0x90, 0x00, 
  0x00, 0x00, 0x00, 0x04, 0x00, 0x02, 0xfe, 0x00, 0x40, 0x60, 0x00, 0x00, 0x01, 0xc0, 0x1e, 0x00, 
  0x07, 0x7e, 0x00, 0x40, 0xf0, 0x00, 0x00, 0x02, 0x20, 0x21, 0x00, 0x08, 0xbe, 0x00, 0x40, 0x90, 
  0x03, 0xff, 0xfc, 0x1f, 0xe1, 0xff, 0xf8, 0xbe, 0x00, 0x40, 0x90, 0x02, 0x00, 0x04, 0x20, 0x21, 
  0x00, 0x08, 0xbe, 0x00, 0x40, 0xf0, 0x42, 0x6e, 0x02, 0x40, 0x11, 0x00, 0x08, 0xbe, 0x00, 0x40, 
  0x40, 0x62, 0xff, 0x01, 0x9f, 0x8e, 0x00, 0x07, 0x3e, 0x00, 0x40, 0x40, 0x71, 0xff, 0x00, 0x3f, 
  0xf4, 0x00, 0x09, 0x1e, 0x00, 0x40, 0x40, 0x71, 0xff, 0x87, 0xff, 0xe4, 0x00, 0x09, 0x1e, 0x00, 
  0x40, 0x40, 0xfd, 0xff, 0x87, 0xff, 0x04, 0x00, 0x06, 0x3e, 0x80, 0x40, 0xf1, 0xfd, 0xff, 0x8f, 
  0xfc, 0x04, 0x00, 0x05, 0xfe, 0xe0, 0x41, 0x9b, 0xfd, 0xff, 0xdf, 0xf8, 0x04, 0x00, 0x05, 0xfe, 
  0xf0, 0x7f, 0x0b, 0xfd, 0xff, 0xff, 0xff, 0x04, 0x00, 0x0d, 0xfe, 0xfc, 0x01, 0x0b, 0xfd, 0xff, 
  0xff, 0xff, 0x84, 0x00, 0x0d, 0xfe, 0xfe, 0x01, 0x9b, 0xfd, 0xff, 0xff, 0xff, 0x8c, 0x00, 0x0d, 
  0xfe, 0xff, 0x98, 0xf3, 0xfd, 0xff, 0xff, 0xff, 0x12, 0xc0, 0x0d, 0xfe, 0xff, 0xf0, 0x41, 0xfd, 
  0xff, 0xff, 0xfe, 0x21, 0x20, 0x05, 0xfe, 0xff, 0xf0, 0x40, 0xfd, 0xff, 0xff, 0xfe, 0x21, 0x3f, 
  0xf9, 0xfe, 0xff, 0xf0, 0x40, 0x7d, 0xff, 0xff, 0xfe, 0x11, 0xc0, 0x05, 0xfe, 0xff, 0xf0, 0x40, 
  0x3d, 0xff, 0xff, 0xff, 0x0e, 0x00, 0x0d, 0xfe, 0xff, 0xf0, 0x40, 0x1d, 0xff, 0xff, 0xff, 0xc0, 
  0x00, 0x0d, 0xfe, 0xff, 0xe0, 0x40, 0x3d, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0d, 0xfe, 0xff, 0xc0, 
  0x40, 0x7d, 0xff, 0xff, 0xff, 0xff, 0x00, 0x1d, 0xfe, 0xff, 0xc0, 0xf0, 0x7d, 0xff, 0xff, 0xf8, 
  0xfe, 0x00, 0x1d, 0xfe, 0xff, 0xc1, 0x08, 0x3d, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x1d, 0xfe, 0xff, 
  0xc1, 0x08, 0x3d, 0xff, 0xff, 0xc0, 0x00, 0x7f, 0xe1, 0xfe, 0xff, 0xe1, 0x08, 0x7d, 0xff, 0xff, 
  0x00, 0x00, 0x40, 0x0f, 0xfe, 0xff, 0xf0, 0xf0, 0xfd, 0xff, 0xfc, 0x00, 0x00, 0x40, 0x1f, 0xfe, 
  0xff, 0xf8, 0x18, 0xfd, 0xff, 0xf0, 0x1e, 0x00, 0x40, 0x3f, 0xfe, 0xff, 0xfd, 0xbd, 0xfd, 0xff, 
  0xfc, 0x22, 0x00, 0x40, 0xff, 0xfe, 0xff, 0xff, 0xbf, 0xfc, 0x00, 0x03, 0xe3, 0xff, 0xc1, 0xff, 
  0xfe, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xf8, 0x22, 0x00, 0x07, 0xff, 0xfe, 0xff, 0xff, 0xbf, 0xff, 
  0xff, 0xff, 0x1e, 0x00, 0x0f, 0xff, 0xfe, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0x88, 0x00, 0x1f, 
  0xff, 0xfe, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xc6, 0x00, 0x3f, 0xff, 0xfe, 0xff, 0xff, 0xbf, 
  0xff, 0xff, 0xff, 0xf7, 0xc3, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xf7, 0xff, 
  0xff, 0xff, 0xfe, 0xff, 0xfe, 0x07, 0xff, 0xc7, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xfe, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0x87, 0x86, 0xff, 0xfe, 0x07, 0xff, 0x87, 0xff, 0xff, 
  0xff, 0xff, 0x87, 0x86, 0xff, 0xff, 0x0f, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0x87, 0x86, 0xff, 
  0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0x86, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe
};


const unsigned int cords[][7] =
{
  {75, 0, 0},
  {200, 2, 1},
  {75, 4, 2},
  {75, 6, 3},
  {75, 8, 4},
  {75, 10, 5},
  {75, 12, 6}
//  {75, 35, 7},
//  {75, 40, 8},
//  {75, 45, 9},
//  {75, 50, 10}
};

const uint8_t frame_sizes[][11] =
{
  {53, 54},
  {51, 54},
  {66, 54},
  {43, 48},
  {65, 54},
  {59, 54},
  {65, 54},
  {75, 35},
  {74, 20},
  {60, 20},
  {73, 8}
};

//const unsigned int percentages[7] PROGMEM =
//{
//  25,
//  25,
//  25,
//  25,
//  25,
//  25,
//  25
//};

byte caught[9] =
{
  0,
  0,
  0,
  0,
  0,
  0,
  0
};

byte ivs[9] =
{
  0,
  0,
  0,
  0,
  0,
  0,
  0
};


uint8_t buttonState_8 = 0;
uint8_t buttonState_7 = 0;
uint8_t buttonState_2 = 0;
uint8_t buttonState_4 = 0;

unsigned int pok_index = 0;

uint8_t current_boss_byte = 0;
uint8_t dex_in = 0;

uint8_t boss_health = 0;


void setup() {

  Serial.begin(115200);
  
  pixels.begin(); // INITIALIZE NeoPixel strip object (REQUIRED)
  pixels.setBrightness(10); // not so bright
//  pixels.setPixelColor(0, pixels.Color(255,0,0));
//  pixels.setPixelColor(1, pixels.Color(255,0,0));
//
//  pixels.setPixelColor(2, pixels.Color(255,128,0));
//  pixels.setPixelColor(3, pixels.Color(255,128,0));
//
//
//  pixels.setPixelColor(4, pixels.Color(0,0,255));
//  pixels.setPixelColor(5, pixels.Color(0,0,255));
//  pixels.setPixelColor(6, pixels.Color(0,0,255));
//  pixels.setPixelColor(7, pixels.Color(0,0,255));
//  pixels.setPixelColor(8, pixels.Color(0,0,255));
//  pixels.setPixelColor(9, pixels.Color(0,0,255));
//  pixels.setPixelColor(10, pixels.Color(0,0,255));
//  pixels.setPixelColor(11, pixels.Color(0,0,255));
//  pixels.setPixelColor(12, pixels.Color(0,0,255));
//  pixels.setPixelColor(13, pixels.Color(0,0,255));
//  pixels.setPixelColor(14, pixels.Color(0,0,255));
//  pixels.setPixelColor(15, pixels.Color(0,0,255));
//  pixels.setPixelColor(16, pixels.Color(0,0,255));
//  pixels.setPixelColor(17, pixels.Color(0,0,255));
//  pixels.setPixelColor(18, pixels.Color(0,0,255));
//  pixels.setPixelColor(19, pixels.Color(0,0,255));
//  pixels.setPixelColor(20, pixels.Color(0,0,255));
//  pixels.setPixelColor(21, pixels.Color(0,0,255));
//  pixels.setPixelColor(22, pixels.Color(0,0,255));
//  pixels.setPixelColor(23, pixels.Color(0,0,255));
//  pixels.setPixelColor(24, pixels.Color(255,128,0)); 
//  pixels.setPixelColor(25, pixels.Color(255,128,0)); 

  pinMode(2, INPUT_PULLUP);
  pinMode(8, INPUT_PULLUP);
  pinMode(4, INPUT_PULLUP);
  pinMode(7, INPUT_PULLUP);


  pixels.show(); // This sends the updated pixel color to the hardware.
  
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }

  pinMode(11, OUTPUT);
  digitalWrite(11, HIGH);
  
  delay(2000); // Pause for 2 seconds
  Serial.begin(9600);

  pinMode(8, INPUT_PULLUP);
  pinMode(7, INPUT_PULLUP);
  pinMode(2, INPUT_PULLUP);
  pinMode(4, INPUT_PULLUP);
  screenWidth = display.width();
  screenHeight = display.height();
  // Clear the buffer.
  display.clearDisplay();
  
 

  display.setTextSize(1);             // Normal 1:1 pixel scale
  display.setTextColor(WHITE);        // Draw white text
  randomSeed(analogRead(0));

  startTime = millis();
  bossHexStartTime = millis();
}


uint32_t Wheel(byte WheelPos) {
  WheelPos = 255 - WheelPos;
  if (WheelPos < 85) {
    return pixels.Color(255 - WheelPos * 3, 0, WheelPos * 3);
  } else if (WheelPos < 170) {
    WheelPos -= 85;
    return pixels.Color(0, WheelPos * 3, 255 - WheelPos * 3);
  } else {
    WheelPos -= 170;
    return pixels.Color(WheelPos * 3, 255 - WheelPos * 3, 0);
  }
}


void rainbow(uint8_t wait) {
  if( startTime + wait < millis() ) {
    uint16_t i;

    for(i=4; i<pixels.numPixels()-1; i++) {
      if (random(pixels.numPixels()) == i)
        pixels.setPixelColor(i,255, 255, 255);
      else
        pixels.setPixelColor(i, Wheel((i+j) & 255));  
        j++;
    }
    pixels.show();
  }
}

//void fade(uint8_t wait) {
//  if( startTime + wait < millis() ) {
//    
//    // Change the brightness
//    brightness += 5 * fadeDirection; // Adjust speed of fade
//    pixels.setPixelColor(0,brightness, brightness, brightness);
//    pixels.setPixelColor(1,brightness, brightness, brightness);
//    pixels.show();
//
//    // Change the direction of the fade
//    if (brightness < 1 || brightness > 255) {
//      fadeDirection *= -1; // Reverse the direction
//    }
//  }
//}

byte rotate_hex(uint8_t pos) {
  //display.clearDisplay();
  randomByte = random(256);
//  display.setCursor(100,0);             
//  display.println("   ");
//  display.display();
  char hexString[10]; // Buffer to store the formatted string

  sprintf(hexString, "0x%02X", randomByte); // Format as "0xXX"
  
  display.setCursor(100, pos);             
  display.println(hexString);

  return randomByte;
  //display.display();

}

byte generate_top_hex(int health, int wait) {
  //display.clearDisplay();
  char hexString[10];

  if( bossHexStartTime + wait < millis() ) {
    bossHexStartTime = millis();
    if (meter <= health) {
      meter = meter + 1; 
    }

  }
  switch (meter) {
      case 0:
        boss_byte_0 = random();
        sprintf(hexString, "0x%02X", boss_byte_0); // Format as "0xXX"
        display.setCursor(0,0);  
        display.println(hexString);
        break;
      case 1:
        boss_byte_1 = random();
        sprintf(hexString, "%02X", boss_byte_1); // Format as "0xXX"
        display.setCursor(25,0);  
        display.println(hexString);
        break;
      case 2:
        boss_byte_2 = random();
        sprintf(hexString, "%02X", boss_byte_2); // Format as "0xXX"
        display.setCursor(37,0);  
        display.println(hexString);
        break;
      case 3:
        boss_byte_3 = random();
        sprintf(hexString, "%02X", boss_byte_3); // Format as "0xXX"
        display.setCursor(50,0);  
        display.println(hexString);
        break;

  }
}


byte display_top_hex() {
  //display.clearDisplay();
  uint8_t display_meter = meter - 1; 
  char hexString[10]; // Buffer to store the formatted string

  switch (display_meter) {
      case 0:
        sprintf(hexString, "0x%02X", boss_byte_0); // Format as "0xXX"
        display.setCursor(0,0);  
        display.println(hexString);
        break;
      case 1:
        sprintf(hexString, "0x%02X", boss_byte_0); // Format as "0xXX"
        display.setCursor(0,0);  
        display.println(hexString);
        sprintf(hexString, "%02X", boss_byte_1); // Format as "0xXX"
        display.setCursor(25,0);  
        display.println(hexString);
        break;
      case 2:
        sprintf(hexString, "0x%02X", boss_byte_0); // Format as "0xXX"
        display.setCursor(0,0);  
        display.println(hexString);
        sprintf(hexString, "%02X", boss_byte_1); // Format as "0xXX"
        display.setCursor(25,0);  
        display.println(hexString);
        sprintf(hexString, "%02X", boss_byte_2); // Format as "0xXX"
        display.setCursor(37,0);  
        display.println(hexString);
        break;
      case 3:
        sprintf(hexString, "0x%02X", boss_byte_0); // Format as "0xXX"
        display.setCursor(0,0);  
        display.println(hexString);
        sprintf(hexString, "%02X", boss_byte_1); // Format as "0xXX"
        display.setCursor(25,0);  
        display.println(hexString);
        sprintf(hexString, "%02X", boss_byte_2); // Format as "0xXX"
        display.setCursor(37,0);  
        display.println(hexString);
        sprintf(hexString, "%02X", boss_byte_3); // Format as "0xXX"
        display.setCursor(50,0);  
        display.println(hexString);
        break;

  }

}


void show_hex(byte hex, int pos) {
  char hexString[10]; // Buffer to store the formatted string

  sprintf(hexString, "0x%02X", hex); // Format as "0xXX"
  
  display.setCursor(100,pos);             
  display.println(hexString);
  //display.display();

}


void print_operator(uint8_t id, uint8_t pos) {
    switch (id) {
      case 0:
        display.setCursor(90, pos);             
        display.println(F("+"));
        break;
      case 1:
        display.setCursor(90, pos);             
        display.println("-");
        break;
      case 2:
        display.setCursor(90, pos);             
        display.println("/");
        break;
      case 3:
        display.setCursor(90, pos);             
        display.println("*");
        break;
      case 4:
        display.setCursor(90, pos);             
        display.println("_");
        break;
      case 5:
        display.setCursor(90, pos);             
        display.println("B");
        break;
        break;
      case 6:
        display.setCursor(90, pos);             
        display.println("2");
        break;
      case 7:
        display.setCursor(90, pos);             
        display.println("<");
        break;
      case 8:
        display.setCursor(90, pos);             
        display.println("S");
        break;
    }
}


void execute_mode() {
    switch (playerMode) {
      case 0:
        playerMode = 1;
        break;
      case 1:
        playerMode = 2;
        break;
      case 2:
        playerMode = 3;
        break;
      case 3:
        playerMode = 4;
        break;
      case 4:
        playerMode = 0;
        num_stack_len = 0;
        break;
    }
}


void change_operator() {
    switch (operator_id) {
      case 0:
        operator_id = 1;
        break;
      case 1:
        operator_id = 2;
        break;
      case 2:
        operator_id = 3;
        break;
      case 3:
        operator_id = 4;
        break;
      case 4:
        operator_id = 5;
        break;
      case 5:
        operator_id = 6;
        break;
      case 6:
        operator_id = 7;
        break;
      case 7:
        operator_id = 8;
        break;
      case 8:
        operator_id = 0;
        break;


    }
}

void execute_operation() {
    switch (operator_pos) {
      case 0:
        calculate_operation(playerByte1, playerByte2);
        break;
      case 10:
        calculate_operation(playerByte1, playerByte2);
        set_new_value();
        break;
      case 20:
        calculate_operation(playerByte2, playerByte3);
        set_new_value();
        break;
      case 30:
        calculate_operation(playerByte3, playerByte4);
        set_new_value();
        break;
    }
}

void calculate_operation(byte first, byte second) {
    int8_t s_second = second;          
    switch (operator_id) {
      case 0:
        new_value = first + second;
        break;
      case 1:
        new_value = first - second;
        break;
      case 2:
        new_value = first / second;
        break;
      case 3:
        new_value = first * second;
        break;
      case 4:
        shift_values();
        break;
      case 5:
        frame_id = 5;
        boss_byte_0 = boss_byte_0 ^ second;
        break;
      case 6:
        boss_byte_0 = boss_byte_0 + s_second;
        frame_id = 7;
        break;
      case 7:
        if (signed_bits > 0) {
          boss_byte_0 = boss_byte_0 << 1;
          frame_id = 9;
          signed_bits = signed_bits -1;
        }
        break;
      case 8:
        second = (second << 1) | (1 & 1);
        frame_id = 11;
        break;
    }
}

void shift_values() {
    switch (operator_pos) {
      case 0:
        playerByte1 = playerByte2;
        playerByte2 = playerByte3;
        playerByte3 = playerByte4;
        //show_hex(playerByte1, 0);
        break;
      case 10:
        //new_value = first - second;
        shift_mode();
        break;
      case 20:
        shift_mode();
        break;
      case 30:
        shift_mode();
        break;
      case 40:
        //shift_values();
        break;
    }
  
}

void shift_mode() {
    switch (playerMode) {
      case 0:
//        playerByte1 = playerByte2;
//        playerByte2 = playerByte3;
//        playerByte3 = playerByte4;
        //show_hex(playerByte1, 0);
        break;
      case 1:
        shift_player_bytes();
        playerMode = playerMode - 1;
        break;
      case 2:
        shift_player_bytes();
        playerMode = playerMode - 1;
        //new_value = first / second;
        break;
      case 3:
        shift_player_bytes();
        playerMode = playerMode - 1;
        //new_value = first * second;
        break;
      case 4:
        shift_player_bytes();
        playerMode = playerMode - 1;
        break;
    }
  
}

void shift_player_bytes() {
    switch (operator_pos) {
      case 0:
        playerByte1 = playerByte2;
        break;
      case 10:
        playerByte1 = playerByte2;
        //playerMode = 0;
        break;
      case 20:
        playerByte1 = playerByte2;
        playerByte2 = playerByte3;
        //playerMode = 0;
        //new_value = first / second;
        break;
      case 30:
        playerByte1 = playerByte2;
        playerByte2 = playerByte3;
        playerByte3 = playerByte4;
        //new_value = first * second;
        break;
      case 40:
        //shift_values();
        break;
    }
  
}

void set_new_value() {
    switch (operator_pos) {
      case 0:
        //playerByte2 = new_value;
        break;
      case 10:
        playerByte2 = new_value;
        break;
      case 20:
        playerByte3 = new_value;
        break;
      case 30:
        playerByte4 = new_value;
        break;
    }
}

void move_operator() {
    switch (operator_pos) {
      case 0:
        operator_pos = 10;
        break;
      case 10:
        operator_pos = 20;
        break;
      case 20:
        operator_pos = 30;
        break;
      case 30:
        operator_pos = 0;
        break;

    }
}


//void next_frame(uint8_t wait) {
//  if( frame_1_startTime + wait < millis() ) {
//    //frame_1_startTime = millis();
//    switch (frame_number) {
//    case 0:
//      //display.clearDisplay();
//      display.drawBitmap(0, 10, epd_bitmap_um_frame1, 56, 56, 1);
//      //display.display();
//      frame_number++;
//      break;
//    case 1:
//      //display.clearDisplay();
//      display.drawBitmap(0, 10, epd_bitmap_um_frame2, 56, 56, 1);
//      //display.display();
//      frame_number++;
//      break;
//    case 2:
//      //display.clearDisplay();
//      display.drawBitmap(0, 10, epd_bitmap_um_frame3, 56, 56, 1);
//      //display.display();
//      frame_number++;
//      break;
//    case 3:
//      //display.clearDisplay();
//      display.drawBitmap(0, 10, epd_bitmap_um_frame4, 56, 56, 1);
//      //display.display();
//      frame_number++;
//      break;
//    case 4:
//      //display.clearDisplay();
//      display.drawBitmap(0, 10, epd_bitmap_um_frame5, 56, 56, 1);
//      //display.display();
//      frame_number++;
//      break;
//    case 5:
//      //display.clearDisplay();
//      display.drawBitmap(0, 10, epd_bitmap_um_frame6, 56, 56, 1);
//      //display.display();
//      frame_number = 0;
//      break;
//    }
//  }
//}

void next_frame_all(uint8_t wait, unsigned int offset, uint8_t size_index) {

    //display.drawBitmap(0, 10, bitmaps[offset + frame_number], frame_sizes[size_index][0], frame_sizes[size_index][1], 1);
//    display.drawBitmap(0, 10, bitmaps[0 + &frame_number], frame_sizes[0][0], frame_sizes[0][1], 1);

//offset = 0;

//Serial.println(offset);
//Serial.println("________");

uint8_t frame = offset/2;
unsigned int frame0 = offset + 0;

unsigned int frame1 = offset + 1;

//Serial.println(frame0);

//  switch (frame0) {
//    case 0:
//      Serial.println("___*&^&*()(*&_____");
//      offset = 0;
//      break; 
//  }1


//Serial.println(frame_sizes[frame][0]);
//Serial.println(frame_sizes[frame][1]);
//Serial.println(frame0);
//
//
//Serial.println(*bitmaps[0]);
//Serial.println(*bitmaps[offset]);


  switch (frame_number) {
    case 0:
      //display.clearDisplay();
      //display.drawBitmap(0, 10, bitmaps[cords[pok_index][1]], frame_sizes[frame][0], frame_sizes[frame][1], 1);
      //display.drawBitmap(0, 10, bitmaps[offset + 0], frame_sizes[offset/2][0], frame_sizes[offset/2][1], 1);
      drawBitmap(offset, 0);

      break;
    case 1:
      //display.clearDisplay();
      //display.drawBitmap(0, 10, bitmaps[cords[pok_index][1] + 1], frame_sizes[frame][0], frame_sizes[frame][1], 1);
      //display.drawBitmap(0, 10, bitmaps[offset + 1], frame_sizes[frame][0], frame_sizes[frame][1], 1);
      //display.display();
      drawBitmap(offset, 1);

      break;
    }
    
    if( frame_1_startTime + wait < millis() ) {
      frame_1_startTime = millis();
      frame_number++;

      if (frame_number == 2) {
        frame_number = 0;
      }
    }
}

int drawBitmap(int dex, int frame_dex) {
    switch (pok_index) {
      case 0:
        if (frame_dex == 0) {
          display.drawBitmap(0, 10, bitmaps[0], frame_sizes[0][0], frame_sizes[0][1], 1);
        } else {
          display.drawBitmap(0, 10, bitmaps[1], frame_sizes[0][0], frame_sizes[0][1], 1);
        }
        break;
      case 1:
        if (frame_dex == 0) {
          display.drawBitmap(0, 10, bitmaps[2], frame_sizes[1][0], frame_sizes[1][1], 1);
        } else {
          display.drawBitmap(0, 10, bitmaps[3], frame_sizes[1][0], frame_sizes[1][1], 1);
        }
        break;
      case 2:
        if (frame_dex == 0) {
          display.drawBitmap(0, 10, bitmaps[4], frame_sizes[2][0], frame_sizes[2][1], 1);
        } else {
          display.drawBitmap(0, 10, bitmaps[5], frame_sizes[2][0], frame_sizes[2][1], 1);
        }
        break;
      case 3:
        if (frame_dex == 0) {
          display.drawBitmap(0, 10, bitmaps[6], frame_sizes[3][0], frame_sizes[3][1], 1);
        } else {
          display.drawBitmap(0, 10, bitmaps[7], frame_sizes[3][0], frame_sizes[3][1], 1);
        }
        break;
      case 4:
        if (frame_dex == 0) {
          display.drawBitmap(0, 10, bitmaps[8], frame_sizes[4][0], frame_sizes[4][1], 1);
        } else {
          display.drawBitmap(0, 10, bitmaps[9], frame_sizes[4][0], frame_sizes[4][1], 1);
        }
        break;
      case 5:
        if (frame_dex == 0) {
          display.drawBitmap(0, 10, bitmaps[10], frame_sizes[5][0], frame_sizes[5][1], 1);
        } else {
          display.drawBitmap(0, 10, bitmaps[11], frame_sizes[5][0], frame_sizes[5][1], 1);
        }
        break;
//      case 6:
//        if (frame_dex == 0) {
//          display.drawBitmap(0, 10, bitmaps[12], frame_sizes[6][0], frame_sizes[6][1], 1);
//        } else {
//          display.drawBitmap(0, 10, bitmaps[13], frame_sizes[6][0], frame_sizes[6][1], 1);
//        }
//        break;
    
    }
}
//
//int random_with_percentage(int percentage) {
//    // Ensure percentage is within valid range (0-100)
//    if (percentage < 0) percentage = 0;
//    if (percentage > 100) percentage = 100;
//
//    // Seed the random number generator (only needs to be done once)
//
//    // Generate a random number between 0 and 99
//    int randomNumber = random() % 100;
//
//    // Return 1 if the random number is less than the percentage, 0 otherwise
//    return (randomNumber < percentage) ? 1 : 0;
//}

unsigned int get_index() {
//  for (unsigned int i =0; i < sizeof(percentages); i++) {
//    int percentage = percentages[i]; 
//    int result = random_with_percentage(percentage);
//    if (result == 1) { 
//      Serial.println("i");
//      Serial.println(i);
//
//      pok_index =  i;
//      return;
//    }
//    
//  }


  int randomNumber = random() % 5;
  pok_index = randomNumber;

  randomNumber = random() % 100;



  if(randomNumber <= 5){
    pok_index = 5;
    return;
  }
  if(randomNumber <= 15){
    pok_index = 4;
    return;
  }
  if(randomNumber <= 20){
    pok_index = 0;
    return;
  }

  if(randomNumber <= 30){
    pok_index = 2;
    return;
  }
  if(randomNumber <= 50){
    pok_index = 1;
    return;
  }
  
  pok_index = 3;


//    switch (randomNumber) {
//    case 0:
//
//    pok_index = 0;
//
//      break;
//    case 1:
//    pok_index = 1;
//
//      break;
//    case 2:
//      pok_index = 2;
//      
//
//      break;
//    case 3:
//    pok_index = 3;
//
//      break;
//    case 4:
//      pok_index = 3;
//
//      break;
//    }
  
}





void next_frame_sword(int wait) {
    switch (frame_number_sword) {
    case 0:
      //display.clearDisplay();
      display.drawBitmap(20 + frame_sword_mov, 10, epd_bitmap_sword, 23, 54, 1);
      //display.display();
      //frame_number_sword++;
      break;
    case 1:
      //display.clearDisplay();
      display.drawBitmap(10 + frame_sword_mov, 20, epd_bitmap_sword_90, 54, 23, 1);
      //display.display();
      //frame_number_sword++;
      break;
    case 2:
      //display.clearDisplay();
      display.drawBitmap(20 + frame_sword_mov, 10, epd_bitmap_sword_180, 23, 54, 1);
      //display.display();
      //frame_number_sword++;
      break;
    case 3:
      //display.clearDisplay();
      display.drawBitmap(10 + frame_sword_mov, 20, epd_bitmap_sword_270, 54, 23, 1);
      //display.display();
      //frame_number_sword = 0;
      break;
    case 4:
      //display.clearDisplay();
      display.drawBitmap(20 + frame_sword_mov, 10, epd_bitmap_sword_180, 23, 54, 1);

      display.drawBitmap(10, 20, epd_bitmap_binary, 80, 12, 1);
      display.drawBitmap(10, 40, epd_bitmap_blade, 70, 12, 1);
      //display.drawBitmap(20 + frame_sword_mov, 10, epd_bitmap_sword_180, 23, 54, 1);
      display.display();

      delay(2000);
      
      frame_number_sword = 0;
      frame_id = 0;
      frame_sword_mov = 0;
      //display.display();
      //frame_number_sword = 0;
      break;
    }

  if( startTime + wait < millis() ) {
      startTime = millis();

    if (frame_number_sword >= 3) {
      frame_number_sword = 0;
      frame_sword_mov = frame_sword_mov + 10;

      if (frame_sword_mov == 80) {
        frame_number_sword = 4;
        display.drawBitmap(20 + frame_sword_mov, 10, epd_bitmap_sword_180, 23, 54, 1);

      } 
    } else if (frame_number_sword != 4) {
      frame_number_sword++;
    }
  }
}

void next_frame_drag(int wait) {
  
  display.clearDisplay();
  
  for (int x = 0; x < screenWidth; x += 6) {
    for (int y = 0; y < screenHeight; y += 10) {
      //delay(10); 
      display.setCursor(x, y);
      display.print("<");
    }
    display.display();
  }
  
//  display.clearDisplay();
//  display.drawBitmap(5, 20, epd_bitmap_2s, 22, 9, 1);
//  display.drawBitmap(5, 40, epd_bitmap_comp, 103, 9, 1);
//  display.display();
//  display.setCursor(35, 20);
//  display.print("1010101010");
//
//  display.setCursor(0, 5);
//  display.print("01101100");

//  display.display();

  //delay(2000); 

  frame_id = 0;
}

void next_frame_pory(int wait) {
  
  switch (frame_number_pory) {
    case 0:
      //display.clearDisplay();
      display.drawBitmap(24, 10, epd_bitmap_pory1, 48, 48, 1);
      //display.display();
      //frame_number_drag++;
      break;
    case 1:
      //display.clearDisplay();
      display.drawBitmap(24, 10, epd_bitmap_pory2, 48, 48, 1);
      //display.display();
      //frame_number_drag++;
      break;
    }

    if( poryStartTime + wait < millis() ) {
      poryStartTime = millis();
      frame_number_pory++;
    } else if (frame_number_pory == 3) {
      poryStartTime = millis();
      frame_number_pory = 0;        
      
      if (drag_loops < 3){
          drag_loops++;
        } else {
          drag_loops=0;
          frame_id = 0;
        }
    }
}

void two_comp() {
  display.clearDisplay();

  char letter = '1';
  
  for (int x = 0; x < screenWidth; x += 6) {
    for (int y = 0; y < screenHeight; y += 10) {
      //delay(10); 
      display.setCursor(x, y);
      display.print(letter);

      letter++;
      if (letter > '1') {
        letter = '0';
      }
    }
    display.display();
  }
  
//  display.clearDisplay();
//  display.drawBitmap(5, 20, epd_bitmap_2s, 22, 9, 1);
//  display.drawBitmap(5, 40, epd_bitmap_comp, 103, 9, 1);
//  display.display();
//  display.setCursor(35, 20);
//  display.print("1010101010");
//
//  display.setCursor(0, 5);
//  display.print("01101100");

//  display.display();

  delay(2000); 

  frame_id = 0;
  
}

void show_next_frame() {
    switch (frame_id) {
      case 5:
        next_frame_sword(25);
        break;
      case 7:
        two_comp();
        break;
      case 9:
        if (signed_bits > 0) {
          next_frame_drag(75); 
        } else {
          frame_id = 0;
        }
        break;
      case 11:
        next_frame_pory(75);
        break;
      default:
        //toggle_next_frame(pok_index);
        //Serial.println("-----");
        //Serial.println(pok_index);
        //Serial.println("-----");
        //Serial.println(cords[pok_index][1]);

        next_frame_all(cords[1][0], cords[pok_index][1], cords[pok_index][2]);
        break;
    }
}




void battle() {
  shift_boss_byte();
  generate_top_hex(boss_health, 2000);
  display_top_hex();

  char shift_string[1];
  char sign_string[1];

  sprintf(sign_string, "%d", signed_bits); // Format as "0xXX"
  display.setCursor(80, 55);  
  display.println(sign_string);

  sprintf(shift_string, "%d", shift_bits); // Format as "0xXX"
  display.setCursor(70, 55);  
  display.println(sign_string);
  
  pixels.show(); // This sends the updated pixel color to the hardware.

  rainbow(1000);
  show_next_frame();
  
  //next_frame(200);
  //next_frame_sword(25);

  digitalWrite(12, HIGH);  // turn the LED on (HIGH is the voltage level)
  //delay(1000);                      // wait for a second
  digitalWrite(12, LOW);   // turn the LED off by making the voltage LOW
  //delay(1000);                      // wait for a second

  if ( buttonStartTime + BUTTON_DELAY < millis() ) {
    buttonStartTime = millis();
    buttonState_8 = digitalRead(8);
    if (buttonState_8 == LOW) {
      change_operator();
    }

  
    buttonState_7 = digitalRead(7);
    if (buttonState_7 == LOW) {
      execute_mode();
      frame_id = 0;
      rotate = true;
      if (num_stack_len < 3) {
        num_stack_len++; 
      }
      if (operator_pos < 30) {
        operator_pos = operator_pos + 10;    
      }
    }

    buttonState_2 = digitalRead(2);
    if (buttonState_2 == LOW) {
      move_operator();
    }

    buttonState_4 = digitalRead(4);
    if (buttonState_4 == LOW) {
      execute_operation();
    }
  }

  if(frame_id <5) {
   switch(playerMode) {
    case 0:
      playerByte1 = rotate_hex(0);
      operator_pos = 0;
 
      print_operator(operator_id, operator_pos);
      break;
    case 1:
      show_hex(playerByte1, 0);
      if (rotate) {
        playerByte2 = rotate_hex(10);  
      } else {
        show_hex(playerByte2, 10);
      }
      
      print_operator(operator_id, operator_pos);
      break;
    case 2:
      show_hex(playerByte1, 0);
      show_hex(playerByte2, 10);
      if (rotate) {
        playerByte3 = rotate_hex(20);
      } else {
        show_hex(playerByte3, 20);
      }
      print_operator(operator_id, operator_pos);
      break;
    case 3:
      show_hex(playerByte1, 0);
      show_hex(playerByte2, 10);
      show_hex(playerByte3, 20);
      if (rotate) {
        playerByte4 = rotate_hex(30);
      } else {
        show_hex(playerByte4, 30);
      }
      print_operator(operator_id, operator_pos);
      break;
    case 4:
      show_hex(playerByte1, 0);
      show_hex(playerByte2, 10);
      show_hex(playerByte3, 20);
      show_hex(playerByte4, 30);
      print_operator(operator_id, operator_pos);
      rotate = false;
      break;
  }
 }
}

void show_map() {

  display.drawBitmap(20, 0, epd_bitmap_kmap, 87, 64, 1);
  displayCursor(index);

  if ( buttonStartTime + BUTTON_DELAY < millis() ) {
    buttonStartTime = millis();
    buttonState_2 = digitalRead(2);
    if (buttonState_2 == LOW) {
        get_index();
        boss_health = 1;
//      Serial.println("pok_index");
//      Serial.println(pok_index);

      if (index == 11) {
        mode = 'd';        
      } else {
        mode = 'b';        
      }


    }

    buttonState_4 = digitalRead(4);
    if (buttonState_4 == LOW) {
      index = index + 1;
      if (index > 12) {
        index = 0;
      }
    }
  }

  //return pok_index;

}


void show_dex() {
  
  if (caught[dex_in] == 0) {
    display.setCursor(47, 55);
    display.setTextColor(SSD1306_WHITE);
    display.print("??????????");
  } else {
    display.setCursor(70, 20);
    display.setTextColor(SSD1306_WHITE);
    display.print(ivs[pok_index]);
    pok_index = dex_in;
    next_frame_all(cords[1][0], cords[pok_index][1], cords[pok_index][2]);
  }

    
  if ( buttonStartTime + BUTTON_DELAY < millis() ) {
  buttonStartTime = millis();

    buttonState_4 = digitalRead(4);
    buttonState_8 = digitalRead(8);

  
    if (buttonState_4 == LOW) {
      dex_in = dex_in +1;
      if (dex_in == 5) {
        dex_in = 0;
      }
    }
    if (buttonState_8 == LOW) {
      mode = 's';
    }
  }
}


void shift_boss_byte() {

   switch(boss_health) {
    case 0:
      if (boss_byte_0 == 0) {

        caught[pok_index] = 1;
        ivs[pok_index] = random() % 100;
        mode = 's';
        
      }
      break;
    default:
      if (boss_byte_0 == 0) {
        //Serial.println("BOSS SHIFT");

        boss_health = boss_health-1;
        meter = meter-1;
        boss_byte_0 = boss_byte_1;
        
      }
      break;
   }

}

 
void loop() {

  //static unsigned int pok_index = 0;


  display.clearDisplay();

//  displayMenu();
//  handleInput();
    //next_frame_all(100, 0);

  //display.display();
  //return;

  switch (mode) {
    case 's':
      show_map();
      //handleInput();
      break;
    case 'b':
      battle();
      break;
    case 'd':
      show_dex();
      break;
    
  }

  display.display();

}


void displayCursor(int i) {
//  if (cords[cord_index][1] == 55) {
//    display.setTextColor(SSD1306_BLACK);
//    //display.setTextColor(SSD1306_WHITE);
//  } else {
//    display.setTextColor(SSD1306_WHITE);
//  }

  switch (i) {
    case 0:
      display.setTextColor(SSD1306_WHITE);
      display.setCursor(20, 9);
      break;
    case 1:
      display.setCursor(30, 15);
      break;
    case 2:
      display.setCursor(30, 30);
      break;
    case 3:
      display.setCursor(30, 42);
      break;
    case 4:
      display.setTextColor(SSD1306_BLACK);
      display.setCursor(30, 55);
      break;
    case 5:
      display.setCursor(47, 55);
      break;
    case 6:
      display.setTextColor(SSD1306_WHITE);
      display.setCursor(64, 47);
      break;
    case 7:
      display.setCursor(75, 35);
      break;
    case 8:
      display.setCursor(74, 20);
      break;
    case 9:
      display.setCursor(60, 20);
      break;
    case 10:
      display.setCursor(73, 8);
      break;
    case 11:
      display.setTextColor(SSD1306_BLACK);
      display.setCursor(85, 56);
      break;


  }

//  const byte cords[][11] PROGMEM =
//{
//  {20, 9},
//  {30, 15},
//  {30, 30},
//  {30, 42},
//  {30, 55},
//  {47, 55},
//  {64, 47},
//  {75, 35},
//  {74, 20},
//  {60, 20},
//  {73, 8}
//};
  //display.setCursor(cords[i][0], cords[i][1]);
  display.print("[ ]");
  //display.display();

}
